{"version":3,"sources":["services/perm-service.ts","components/utils/buttons/circle-button.tsx","components/navigation/navbar.tsx","store/ui.ts","components/utils/category.tsx","components/modals/modal.tsx","store/utils/rest-headers.ts","store/api.ts","store/utils/filter.ts","store/channels.ts","components/utils/react/react-shush-error.ts","components/inputs/input.tsx","components/utils/buttons/normal-button.tsx","components/utils/save-changes.tsx","components/modals/channel-settings/channel-settings-overview.tsx","store/guilds.ts","components/utils/vanilla/sort.ts","components/ctx-menus/dev-mode-menu-section.tsx","components/ctx-menus/role-menu.tsx","components/utils/tab-link.tsx","store/members.ts","store/roles.ts","store/utils/reduce.ts","hooks/use-perms.ts","components/inputs/three-toggle.tsx","components/modals/channel-settings/perm-toggle.tsx","components/modals/channel-settings/perm-overrides.tsx","components/modals/channel-settings/scarce-select.tsx","components/modals/channel-settings/channel-settings-perms.tsx","components/utils/buttons/esc-button.tsx","components/utils/nav-tabs.tsx","components/modals/channel-settings/channel-settings.tsx","components/modals/create-channel.tsx","components/modals/create-guild.tsx","store/invites.ts","components/modals/create-invite.tsx","components/inputs/channel-select.tsx","components/modals/guild-settings/guild-settings-overview.tsx","components/inputs/toggle.tsx","components/modals/guild-settings/role-permissions.tsx","components/modals/guild-settings/guild-settings-roles.tsx","components/modals/guild-settings/guild-settings-invites.tsx","components/modals/guild-settings/guild-settings.tsx","components/modals/image-preview.tsx","components/utils/image.tsx","components/navigation/sidebar/sidebar-icon.tsx","components/user/username.tsx","components/modals/user-profile.tsx","store/config.ts","store/meta.ts","store/users.ts","components/modals/user-settings/user-settings-overview.tsx","store/auth.ts","components/modals/user-settings/user-settings-security.tsx","components/modals/user-settings/user-settings.tsx","services/ws-service.ts","store/typing.ts","services/voice-service.ts","store/messages.ts","store/pings.ts","store/actions/fetch-entities.ts","components/ws-listener.tsx","components/pages/page-wrapper.tsx","assets/home/chat.svg","assets/home/devices.svg","assets/home/friends.svg","assets/home/secure.svg","components/pages/home-page.tsx","components/navigation/app-navbar.tsx","components/navigation/sidebar/sidebar-footer.tsx","components/utils/dropdown.tsx","components/dropdowns/guild-dropdown.tsx","components/ctx-menus/channel-menu.tsx","components/navigation/sidebar/channel-tabs.tsx","components/navigation/sidebar/sidebar-content.tsx","components/ctx-menus/guild-menu.tsx","components/navigation/sidebar/sidebar-icons.tsx","components/navigation/sidebar/sidebar.tsx","components/channel/message/message-toolbar.tsx","components/ctx-menus/message-menu.tsx","components/channel/message-box/message-box-input.tsx","components/channel/message-box/message-box-left-side.tsx","components/channel/message-box/typing-users.tsx","components/channel/message-box/message-box.tsx","../../types/patterns.ts","services/format-service.ts","services/mention-service.ts","hooks/use-mentions.ts","hooks/use-format.ts","components/channel/message/message-content.tsx","components/channel/message/message-timestamp.tsx","components/channel/message/message-header.tsx","components/channel/message/message.tsx","components/channel/text-channel-header.tsx","components/skeleton/skeleton-message.tsx","components/channel/text-based-channel.tsx","components/ctx-menus/guild-member/role-manager.tsx","components/ctx-menus/guild-member/guild-member-menu.tsx","components/user/member-list.tsx","components/pages/guild-page.tsx","components/pages/auth/verify-code-input.tsx","components/pages/auth/login-page.tsx","components/pages/auth/register-page.tsx","components/pages/overview-page.tsx","components/pages/auth/logout-page.tsx","components/pages/loading-page.tsx","components/routing/private-route.tsx","components/pages/not-found-page.tsx","components/pages/auth/verify-page.tsx","components/app.tsx","reportWebVitals.ts","store/middleware/rest.ts","store/middleware/ws.ts","index.tsx","store/configure-store.ts","services/event-service.ts"],"names":["CircleButton","props","className","classNames","children","Navbar","user","useSelector","s","auth","to","slice","createSlice","name","initialState","reducers","startedEditingMessage","state","payload","editingMessageId","stoppedEditingMessage","focusedResource","activeResource","focusedInvite","activeInvite","focusedUser","activeUser","pageSwitched","activeChannel","channel","activeGuild","guild","openedModal","openModal","closedModal","toggleDropdown","openDropdown","toggleSaveChanges","saveChangesOpen","actions","openSaveChanges","isOpen","dispatch","getState","ui","openUserProfile","openDialog","dialog","events","emit","closeModal","Category","title","count","undefined","sizeClass","Modal","typeName","size","useDispatch","closeSnackbar","useSnackbar","appElement","document","querySelector","onRequestClose","headers","token","localStorage","getItem","restCallBegan","createAction","restCallSucceded","restCallFailed","wsCallBegan","wsCallSucceded","wsCallFailed","uploadFile","file","callback","formData","FormData","append","method","url","data","notInArray","arr","old","some","e","id","fetched","channels","push","filter","created","deleted","index","findIndex","c","channelId","splice","updated","Object","assign","partialChannel","deleteChannel","api","event","updateChannel","getChannel","createSelector","entities","find","filterProps","setTab","register","titleName","initialValue","Input","label","options","type","autoFocus","disabled","htmlFor","NormalButton","SaveChanges","enqueueSnackbar","useEffect","anchorOrigin","vertical","horizontal","content","key","persist","onClickSave","onSave","onClickReset","obj","setValue","onReset","style","width","onClick","ChannelSettingsOverview","useForm","handleSubmit","onChange","value","summary","window","confirm","guilds","g","guildId","partialGuild","u","updateGuild","getGuild","getGuildChannels","getGuildRoles","roles","role","r","sort","a","b","DevModeMenuSection","ids","map","icon","faIdCard","RoleMenu","devMode","config","color","TabLink","tab","saveChanges","backgroundColor","angrySaveChanges","members","added","member","removed","m","memberId","partialMember","getMember","userId","getSelfMember","roleId","partialRole","getRoles","includes","getMemberHighestRole","k","roleIds","reduce","acc","val","General","Text","Voice","PermissionTypes","VIEW_CHANNELS","CREATE_INVITE","SEND_MESSAGES","READ_MESSAGES","PermService","description","general","text","permission","ownerId","this","hasPerm","getTotalPerms","All","overrides","o","cumulativeAllowPerms","prev","curr","allow","cumulativeDenyPerms","deny","permNumber","canInherently","can","isAllowedByOverride","isDeniedByOverride","permissions","totalPerms","Boolean","ADMINISTRATOR","prereq","managedUserId","userMember","memberIsHigher","canManage","myRoles","theirRoles","max","myHighestRole","theirHighestRole","selfIsOwner","selfHasHigherRole","position","TypeError","usePerms","useStore","ThreeToggle","useState","defaultValue","currentTarget","PermToggle","overrideState","permName","category","toLowerCase","override","setOverride","isDenied","getDefaultValue","PermOverrides","keys","ScarceSelect","colorStyles","singleValue","display","control","borderRadius","option","styles","cursor","input","menu","multiValue","indicatorSeparator","indicatorsContainer","float","multiValueLabel","placeholder","unadded","mapOptions","noOptionsMessage","ChannelSettingsPerms","useParams","defaultOverride","clone","setRoleId","unaddedRoles","overrideRoles","deleteActiveOverride","RoleDetails","filtered","v","i","t","alreadyActive","select","EscButton","faTimes","NavTabs","tabs","predicate","linkStyle","activeLinkStyle","ChannelSettings","perms","perm","CreateChannel","types","onSubmit","createChannel","CreateGuild","register2","handleSubmit2","inviteCode","list","invite","CreateInvite","navigator","clipboard","writeText","ChannelSelect","channelOptions","concat","border","caretColor","height","marginTop","GuildSettingsOverview","accept","iconURL","files","uploadCallback","uploadGuildIcon","setValueAs","systemChannelId","Toggle","checked","RolePermissions","setPerms","setRoleValue","fullySetPerms","has","on","defaultPermissions","GuildSettingsRoles","getValues","activeRoleId","setActiveRoleId","activeRole","hoisted","setHoisted","permsService","deleteRole","selfIsHigher","createRole","updateRole","GuildSettingsInvites","invites","getGuildInvites","Invites","length","GuildSettings","resource","fullURL","process","src","onError","onerror","href","target","Image","SidebarIcon","imageURL","classes","location","useLocation","getAbbr","split","n","join","Icon","alt","isActive","pathname","startsWith","activeClasses","Username","highestRole","userOwnsGuild","discrim","discriminator","toString","padStart","isOnline","status","UserPresence","blob","avatarURL","username","faCrown","UserProfile","selfUser","badgeIcons","faBug","faRocket","faSun","faGavel","faVideo","UserBadges","badges","UserInfo","createdAt","moment","format","UserMutualGuilds","store","mutualGuilds","guildIds","fontWeight","padding","margin","borderBottom","get","JSON","parse","set","setItem","memberListToggled","toggleDevMode","toggleMemberList","fetchedEntities","hasListenedToWS","userCount","NaN","meta","listenedToWS","ping","updatedUserCount","users","partialUser","updateSelf","getUser","UserSettingsOverview","email","uploadUserAvatar","stopPropagation","attemptedLogin","shouldVerify","ready","updatedUser","loggedIn","loggedOut","logoutUser","removeItem","sendVerifyCode","code","onSuccess","message","variant","UserSettingsSecurity","passwordForm","verified","faInfoCircle","oldPassword","newPassword","changePassword","faCheckCircle","faExclamationTriangle","UserSettings","ws","io","connect","secure","path","transports","console","log","lastTypedAt","timeout","beforeSendMs","mediaStream","recorder","userTyped","typing","userStoppedTyping","getIndex","total","unshift","messageId","getChannelMessages","messages","fetchMessages","back","createMessage","attachmentURLs","initialized","pings","channelMarkedAsRead","guildPings","indexOf","guildMarkedAsRead","audioChunks","startVoiceFeedback","currentChannelId","wsPing","Date","getTime","startMedia","onstop","onStop","start","setTimeout","stop","mediaDevices","getUserMedia","audio","MediaRecorder","onstart","ondataavailable","Blob","connections","arrayBuffer","remove","createElement","URL","createObjectURL","play","channelActions","guildActions","memberActions","roleActions","userActions","WSListener","history","useHistory","hasListened","handleDialog","autoHideDuration","error","args","selfCreated","creatorId","uiActions","ignored","userIds","authorId","fetchEntities","disconnect","voice","clearTimeout","PageWrapper","dropdown","pageTitle","HomePage","ImageCard","addEventListener","endsWith","textContent","displayType","thousandSeparator","Chat","Devices","Friends","Secure","REACT_APP_VERSION","AppNavbar","faHashtag","faUserFriends","SidebarFooter","VoiceFooter","faSignal","faPhoneSlash","faCog","Dropdown","faChevronDown","GuildDropdown","faUserPlus","faPlusCircle","ChannelMenu","ChannelTabs","guildChannels","ChannelTab","link","faVolumeUp","VCMembers","ChannelTabContent","preventDefault","active","SidebarContent","GuildMenu","faDoorOpen","SidebarIcons","guildIcons","PlusIcon","Sidebar","MessageToolbar","isAuthor","canInChannel","faPencilAlt","MessageMenu","MessageBoxInput","messageBoxRef","useRef","contentState","setContent","handleEscape","canSend","ref","onKeyUp","innerText","secsAgo","diff","shiftKey","emptyMessage","replaceAll","saveEdit","current","contentEditable","MessageBoxLeftSide","uploadInput","React","createRef","hidden","faUpload","click","TypingUsers","typers","typingUsers","MessageBox","cachedContent","setCachedContent","stopEditing","FormatService","patterns","boldItalic","bold","italic","underline","underlineItalics","underlineBold","underlineBoldItalics","strikethrough","codeMultiline","codeLine","blockQuoteMultiline","blockQuoteLine","replace","defaultPatterns","MentionService","tags","formatted","original","og","getChannelByName","tag","getUserByTag","_","mentionAnchorTag","selfUserId","mentioned","useMentions","useFormat","mentions","toHTML","MessageContent","messageHTML","striptags","updatedAt","Attachments","maxWidth","dangerouslySetInnerHTML","__html","MessageTimestamp","toDays","date","midnight","setHours","daysAgo","Math","floor","getDate","MessageHeader","author","isExtra","system","Message","isActuallyExtra","LeftSide","faArrowRight","faArrowLeft","TextChannelHeader","canRead","faEyeSlash","SkeletonMessage","TextBasedChannel","messagesRef","msgCount","loadedAllMessages","scroll","top","scrollHeight","focus","LoadingIndicator","Array","fill","onScroll","scrollTop","RoleManager","removeEveryone","slicedRoleIds","setRoleIds","opacity","rolesHaveChanged","stringify","roleOption","isOptionDisabled","onMenuClose","isMulti","GuildMemberMenu","isSelf","userIsBlocked","canKick","faUser","faBan","MemberList","hoistedRoles","getGuildMembers","getGuildUsers","canMember","UserList","by","localeCompare","getRoleIds","byPositionDesc","hoistedRoleIds","GuildPage","systemChannel","VerifyCodeInput","verifyForm","LoginPage","query","URLSearchParams","search","setEmail","loginUser","onInput","forgotPasswordEmail","RegisterPage","registerUser","OverviewPage","LogoutPage","LoadingPage","tips","randomIndex","random","PrivateRoute","NotFoundPage","VerifyPage","App","lastReadMessageIds","basename","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","next","action","axios","request","baseURL","response","unsub","off","wrapperCallback","errorCallback","ReactDOM","render","maxSnack","configureStore","middleware","getDefaultMiddleware","serializableCheck","reducer","combineReducers","StrictMode","getElementById","EventEmitter","global"],"mappings":"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","file":"static/js/main.3669e3e2.chunk.js","sourcesContent":["import { getChannel } from '../store/channels';\nimport { getGuild, getGuildRoles } from '../store/guilds';\nimport { getMember, getSelfMember } from '../store/members';\nimport { getRoles } from '../store/roles';\n\n// FIXME: import this namespace from types\nexport namespace PermissionTypes {\n  export enum General {\n    VIEW_CHANNELS = 1024,\n    // MANAGE_NICKNAMES = 512, // change number\n    // CHANGE_NICKNAME = 256, // change number\n    MANAGE_INVITES = 256,\n    CREATE_INVITE = 128,\n    KICK_MEMBERS = 64,\n    // BAN_MEMBERS = 32, // change number\n    MANAGE_CHANNELS = 16,\n    MANAGE_ROLES = 8,\n    MANAGE_GUILD = 4,\n    // VIEW_AUDIT_LOG = 2, // change number\n    ADMINISTRATOR = 1,\n  }\n  export enum Text {\n    // ADD_REACTIONS = 2048 * 16,\n    // MENTION_EVERYONE = 2048 * 8,\n    READ_MESSAGES = 2048 * 4,\n    MANAGE_MESSAGES = 2048 * 2,\n    SEND_MESSAGES = 2048,\n  }\n  export enum Voice {\n    // MOVE_MEMBERS = 32768 * 8,\n    // MUTE_MEMBERS = 32768 * 4,\n    SPEAK = 32768 * 2,\n    CONNECT = 32768,\n  }\n  export const All = {\n    ...General,\n    ...Text,\n    ...Voice,\n  }\n  export type Permission = General | Text | Voice;\n  export type PermissionString = keyof typeof All;\n  \n  export const defaultPermissions =\n    PermissionTypes.General.VIEW_CHANNELS\n    | PermissionTypes.General.CREATE_INVITE\n    | PermissionTypes.Text.SEND_MESSAGES\n    | PermissionTypes.Text.READ_MESSAGES;\n}\n\nexport class PermService {\n  public readonly description = {\n    general: {\n      'ADMINISTRATOR': `Gives all permissions. This is a dangerous permission.`,\n      'CREATE_INVITE': 'Ability to create invites for users to join this guild.',\n      'KICK_MEMBERS': 'Ability to kick members from this guild.',\n      'MANAGE_CHANNELS': 'Ability to create, edit, or delete channels.',\n      'MANAGE_GUILD': `Ability to edit general guild settings.`,\n      'MANAGE_ROLES': 'Ability to create, update, and delete guild roles.',\n      'VIEW_CHANNELS': 'Ability to view channels.',\n      'MANAGE_INVITES': 'Ability to delete invites.',\n    },\n    text: {\n      'MANAGE_MESSAGES': `Ability to manage message other member's messages.`,\n      'READ_MESSAGES': `Ability to read messages,`,\n      'SEND_MESSAGES': 'Ability to send messages in text channels.',\n    },\n  };\n\n  constructor(private state: Store.AppState) {}\n\n  public canMember(permission: PermissionTypes.PermissionString, guild: Entity.Guild, member: Entity.GuildMember) {\n    return guild.ownerId === member.userId\n      || this.hasPerm(\n          this.getTotalPerms(member, guild.id),\n          PermissionTypes.All[permission] as number,\n        );\n  }\n  public canInChannel(permission: PermissionTypes.PermissionString, guildId: string, channelId: string) {\n    const channel = this.getChannel(channelId);    \n    const member = this.getSelfMember(guildId);\n\n    const overrides = channel.overrides\n      ?.filter(o => member.roleIds.includes(o.roleId)) ?? [];\n\n    const cumulativeAllowPerms = overrides.reduce((prev, curr) => prev | curr.allow, 0);\n    const cumulativeDenyPerms = overrides.reduce((prev, curr) => prev | curr.deny, 0);\n\n    const permNumber = PermissionTypes.Text[permission];\n    const canInherently = this.can(permission, guildId);\n    const isAllowedByOverride = this.hasPerm(cumulativeAllowPerms, permNumber);\n    const isDeniedByOverride = this.hasPerm(cumulativeDenyPerms, permNumber);\n\n    return (canInherently && !isDeniedByOverride) || isAllowedByOverride;\n  }\n\n  public can(permission: PermissionTypes.PermissionString, guildId: string) {\n    const guild = this.getGuild(guildId);    \n    const member = this.getSelfMember(guildId);\n\n    return (guild.ownerId === member.userId)\n      || this.hasPerm(\n          this.getTotalPerms(member, guildId),\n          PermissionTypes.All[permission] as number,\n        );\n  }\n  private getTotalPerms(member: Entity.GuildMember, guildId: string) {\n    return getGuildRoles(guildId)(this.state)\n      .filter(r => member?.roleIds.includes(r.id))\n      .reduce((acc, value) => value.permissions | acc, 0);\n  }\n  private hasPerm(totalPerms: number, permission: number) {\n    return Boolean(totalPerms & permission)\n        || Boolean(totalPerms & PermissionTypes.General.ADMINISTRATOR);\n  }\n\n  public canManage(prereq: PermissionTypes.PermissionString, guildId: string, managedUserId: string) {\n    const userMember = getMember(guildId, managedUserId)(this.state);\n    if (!userMember) return false;\n\n    return this.can(prereq, guildId)\n      && (this.state.auth.user!.id === userMember.userId\n      || (this.memberIsHigher(guildId, userMember.roleIds)));\n  }\n\n  public canPunish(prereq: PermissionTypes.PermissionString, guildId: string, managedUserId: string) {\n    return this.state.auth.user!.id !== managedUserId\n      && this.can(prereq, guildId)\n      && this.canManage(prereq, guildId, managedUserId);\n  }\n\n  // TODO: test\n  public memberIsHigher(guildId: string, roleIds: string[]) {\n    const guild = this.getGuild(guildId);\n    const member = this.getSelfMember(guildId);    \n    const myRoles = getRoles(member.roleIds)(this.state);\n    const theirRoles = getRoles(roleIds)(this.state);\n\n    const max = (key: string) => (max, val) => (max[key] > val[key]) ? max : val;\n    const myHighestRole: Entity.Role = myRoles.reduce(max('position'));\n    const theirHighestRole: Entity.Role = theirRoles.reduce(max('position'));\n\n    const selfIsOwner = member.userId === guild.ownerId;\n    const selfHasHigherRole = myHighestRole.position > theirHighestRole.position;    \n\n    return selfIsOwner || selfHasHigherRole;\n  }\n\n  public getHighestRole(roles: Entity.Role[]) {\n    const max = (key: string) => (max, val) => (max[key] > val[key]) ? max : val;\n    return roles.reduce(max('position'));\n  }\n\n  private getChannel(channelId: string) {\n    const channel = getChannel(channelId)(this.state);\n    if (!channel)\n      throw new TypeError('Channel not found');\n    return channel;\n  }\n  private getGuild(guildId: string) {\n    const guild = getGuild(guildId)(this.state);\n    if (!guild)\n      throw new TypeError('Guild not found');\n    return guild;\n  } \n  private getSelfMember(guildId: string) {\n    const member = getSelfMember(guildId)(this.state);\n    if (!member)\n      throw new TypeError('Member not found');\n    return member;\n  }\n}","import classNames from 'classnames';\n\nconst CircleButton: React.FunctionComponent<any> = (props) => {\n  return (\n    <button\n      {...props}\n      className={classNames(\n        `rounded-full border-2 border-gray-400 secondary px-4 py-1`,\n        props.className)}>{props.children}</button>\n  );\n}\n \nexport default CircleButton;","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CircleButton from '../utils/buttons/circle-button';\n \nconst Navbar: React.FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  \n  return (\n    <nav className=\"flex items-center justify-between h-15 p-4 px-8\">\n      <a className=\"logo\">\n        <span className=\"font-bold text-white\">accord</span>\n        <span className=\"text-gray-600\">.</span>\n        <span className=\"muted font-light\">app</span>\n      </a>\n      <div>\n        <Link to={user ? '/channels/@me' : '/login'}>\n          <CircleButton>{user ? 'App' : 'Login'}</CircleButton>\n        </Link>\n      </div>\n    </nav>\n  );\n}\n \nexport default Navbar;","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport events from '../services/event-service';\nimport React from 'react';\n\nconst slice = createSlice({\n  name: 'ui',\n  initialState: {} as Store.AppState['ui'],\n  reducers: {\n    startedEditingMessage: (state, { payload }) => {\n      state.editingMessageId = payload;\n    },\n    stoppedEditingMessage: (state) => {\n      delete state.editingMessageId;\n    },\n    // only 1 invite is created -> to save data, and stop spam\n    focusedResource: (state, { payload }) => {\n      state.activeResource = payload;\n    },\n    focusedInvite: (state, { payload }) => {\n      state.activeInvite = payload;\n    },\n    focusedUser: (state, { payload }) => {\n      state.activeUser = payload;\n    },\n    pageSwitched: (state, { payload }) => {\n      state.activeChannel = payload.channel;\n      state.activeGuild = payload.guild;\n    },\n    openedModal: (state, { payload }) => {      \n      state.openModal = payload;\n    },\n    closedModal: (state) => {\n      delete state.openModal;\n    },\n    toggleDropdown: (state, { payload }) => {      \n      state.openDropdown = payload?.name;\n    },\n    toggleSaveChanges: (state, { payload }) => {\n      state.saveChangesOpen = payload;\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const dropdownIsOpen = (type: React.FunctionComponent) => createSelector(\n  state => state.ui.openDropdown,\n  name => name === type.name,\n);\nexport const modalIsOpen = (type: React.FunctionComponent) => createSelector(\n  state => state.ui.openModal,\n  name => name === type.name,\n);\n\nexport const openSaveChanges = (isOpen: boolean) => (dispatch, getState: () => Store.AppState) => {\n  if (getState().ui.saveChangesOpen === isOpen) return;\n\n  dispatch(actions.toggleSaveChanges(isOpen));\n}\nexport const angrySaveChanges = () => {\n  const saveChanges = document.querySelector('#saveChanges') as HTMLDivElement;\n  if (!saveChanges) return;\n\n  saveChanges.style.backgroundColor = 'var(--danger)';\n}\n\nexport const openUserProfile = (user: Entity.User) => (dispatch) => {\n  dispatch(actions.focusedUser(user));\n  dispatch(actions.openedModal('UserProfile'));\n}\nexport const previewImage = (url: string) => (dispatch) => {\n  dispatch(actions.focusedResource(url));\n  dispatch(actions.openedModal('ImagePreview'));\n}\n\nexport interface Dialog {\n  content: string | JSX.Element;\n  variant: 'default' | 'info' | 'error' | 'success' | 'warning';\n}\nexport const openDialog = (dialog: Dialog) => () => events.emit('dialog', dialog);\n\n\nexport const closeModal = (dispatch) => {\n  dispatch(actions.closedModal());\n  dispatch(openSaveChanges(false));\n  dispatch(actions.focusedUser(null));\n};","import classNames from 'classnames';\n\nexport interface CategoryProps {\n  title: string;\n  count?: number;\n  className?: string;\n}\n\nconst Category: React.FunctionComponent<CategoryProps> = ({ title, count, className }) => {\n  return (\n    <h2 className={classNames(`uppercase font-bold text-xs tracking-wider`, className)}>\n      {title} {count !== undefined && `— ${count}`}\n    </h2>\n  );\n}\n\nexport default Category;","import classNames from 'classnames';\nimport { useSnackbar } from 'notistack';\nimport ReactModal from 'react-modal'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModal } from '../../store/ui';\n\nexport interface ModalProps {\n  typeName: string;\n  size?: keyof typeof sizeClass;\n  className?: string;\n}\n\n// TODO: add mobile styling support\nconst sizeClass = {\n  'sm': 'rounded-lg 2xl:w-1/4 2xl:inset-x-1/3 2xl:inset-y-1/3   md:w-1/3 md:inset-x-1/3 md:inset-y-1/4',\n  'md': 'rounded-lg 2xl:w-1/3 2xl:inset-x-1/3 2xl:inset-y-1/4   md:w-1/4 md:inset-x-1/3 md:inset-y-1/3',\n  'lg': 'rounded-lg 2xl:w-1/3 2xl:inset-x-1/3 2xl:top-1/4       md:w-1/3 md:inset-x-1/3 md:top-20',\n  'xl': 'rounded-lg 2xl:w-1/2 2xl:inset-x-1/4 2xl:top-1/4       md:w-1/3 md:inset-x-1/3 md:top-20',\n  'full': 'h-full w-full',\n};\n \nconst Modal: React.FunctionComponent<ModalProps> = ({ className, typeName, size, children }) => {\n  const dispatch = useDispatch();\n  const openModal = useSelector((s: Store.AppState) => s.ui.openModal);\n  const { closeSnackbar } = useSnackbar();\n\n  return (\n    <ReactModal\n      className={classNames(\n        `bg-bg-primary overflow-auto fixed outline-none`,\n        className,\n        sizeClass[size ?? 'sm'],\n      )}\n      appElement={document.querySelector('#root') as any}\n      isOpen={openModal === typeName}\n      onRequestClose={() => {\n        dispatch(closeModal);\n        closeSnackbar('saveChanges');\n      }}>{children}</ReactModal>\n  );\n}\n \nexport default Modal;","export const headers = () => ({\n  'Authorization': `Bearer ${token()}`,\n});\n\nexport const token = () => localStorage.getItem('token');","import { createAction } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { headers } from './utils/rest-headers';\n\nexport const actions = {\n  restCallBegan: createAction<APIArgs>('api/restCallBegan'),\n  restCallSucceded: createAction<{}>('api/restCallSucceeded'),\n  restCallFailed: createAction<{}>('api/restCallFailed'),\n  wsCallBegan: createAction<WSArgs>('api/wsCallBegan'),\n  wsCallSucceded: createAction<{}>('api/wsCallSucceeded'),\n  wsCallFailed: createAction<{}>('api/wsCallFailed'),\n};\n\nexport interface APIArgs {\n  data?: object;\n  headers?: object;\n  method?: 'get' | 'post' | 'put' | 'patch' | 'delete';\n  onSuccess?: string[];\n  url: string;\n  /** Callback to handle side effects. */\n  callback?: (payload: any) => any | Promise<any>;\n}\nexport interface WSArgs {\n  data?: object;\n  event: keyof WS.To;\n}\n\nexport const uploadFile = (file: File, callback?: (args: REST.From.Post['/upload']) => any) => (dispatch) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  \n  dispatch(actions.restCallBegan({\n    method: 'post',\n    url: '/upload',\n    data: formData,\n    headers: {\n      ...headers(),\n      'Content-Type': 'multipart/form-data',\n    },\n    callback,\n  }));\n}","export const notInArray = (arr: any[]) => (old) => !arr.some(e => e.id === old.id);\nexport const uniqueBy = (key: string) => (v, i, a) => a.findIndex(t => (t[key] === v[key])) === i;","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { notInArray } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'channels',\n  initialState: [] as Store.AppState['entities']['channels'],\n  reducers: {\n    fetched: (channels, { payload }: Store.Action<Entity.Channel[]>) => { \n      channels.push(...payload.filter(notInArray(channels)));\n    },\n    created: (channels, { payload }: Store.Action<WS.Args.ChannelCreate>) => {\n      channels.push(payload.channel);\n    },\n    deleted: (channels, { payload }: Store.Action<WS.Args.ChannelDelete>) => {\n      const index = channels.findIndex(c => c.id === payload.channelId);\n      channels.splice(index, 1);\n    },\n    updated: (channels, { payload }: Store.Action<WS.Args.ChannelUpdate>) => {\n      const index = channels.findIndex(c => c.id === payload.channelId);\n      Object.assign(channels[index], payload.partialChannel);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const createChannel = (guildId: string, { name, type }: WS.Params.ChannelCreate) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'CHANNEL_CREATE',\n    data: { guildId, name, type } as WS.Params.ChannelCreate,\n  }));\n}\n\nexport const deleteChannel = (channelId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'CHANNEL_DELETE',\n    data: { channelId } as WS.Params.ChannelDelete,\n  }));\n}\n\nexport const updateChannel = (channelId: string, payload: Partial<Entity.Channel>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'CHANNEL_UPDATE',\n    data: { channelId, ...payload } as WS.Params.ChannelDelete,\n  }));\n}\n\nexport const joinVoiceChannel = (channelId: string) => (dispatch, getState: () => Store.AppState) => {\n  const channel = getChannel(channelId)(getState()) as ChannelTypes.Voice;\n  const selfUser = getState().auth.user!;\n  if (channel.userIds.includes(selfUser.id)) return;\n  \n  dispatch(api.wsCallBegan({\n    event: 'CHANNEL_JOIN',\n    data: { channelId } as WS.Params.ChannelJoin,\n  }));\n}\nexport const leaveVoiceChannel = () => (dispatch) => {\n  dispatch(api.wsCallBegan({ event: 'CHANNEL_LEAVE' }));\n}\n\nexport const getChannel = (id: string) => createSelector(\n  state => state.entities.channels,\n  channels => channels.find(c => c.id === id),\n);\n\nexport const getChannelByName = (guildId: string, name: string) => createSelector(\n  state => state.entities.channels,\n  channels => {\n    return channels.find(c => c.guildId === guildId && c.name == name)\n  },\n);\n\nexport const getChannelUsers = (channelId: string) => createSelector(\n  state => ({ channels: state.entities.channels, users: state.entities.users }),\n  ({ channels, users }) => {\n    const vc = channels.find(c => c.id === channelId) as ChannelTypes.Voice;\n    return vc.userIds.map(id => users.find(u => u.id === id))\n  },\n);","// stop unknown property react error\nexport const filterProps = (props: object) => {\n  return {\n    ...props,\n    setTab: undefined,\n    register: undefined,\n    titleName: undefined,\n    initialValue: undefined,\n  }\n}","import './input.scoped.css';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { UseFormRegister, FieldValues } from 'react-hook-form';\nimport { filterProps } from '../utils/react/react-shush-error';\n\nexport interface InputProps {\n  name: string;\n  register?: UseFormRegister<FieldValues>;\n  options?: any;\n  autoFocus?: boolean;\n  label?: string;\n  type?: string;\n  className?: string;\n  disabled?: boolean;\n}\n \nconst Input: React.FunctionComponent<InputProps & React.AllHTMLAttributes<HTMLInputElement>> = (props) => {\n  const { label, name, register, options, type, autoFocus, className, disabled } = props;\n  const id = name + 'Input';\n\n  return (\n    <div className={className}>\n      {label &&\n        <label\n          htmlFor={id}\n          className=\"uppercase text-xs font-semibold\">{label}</label>}\n      <input\n        id={id}\n        type={type ?? 'text'}\n        autoFocus={autoFocus}\n        disabled={disabled}\n        {...filterProps(props)}\n        {...register?.(name, { ...options })}\n        className={classNames(\n          'block bg-bg-secondary rounded focus:outline-none w-full h-10 p-2 mt-2',\n          { 'h-12': type === 'file' },\n        )} />\n    </div>\n  );\n}\n \nexport default Input;","const NormalButton: React.FunctionComponent<any> = (props) => {\n  return (\n    <button\n      {...props}\n      className={`rounded-md py-1.5 px-4 ${props.className}`}>\n      {props.children}\n    </button>\n  );\n}\n\nexport default NormalButton;","import { useSnackbar } from 'notistack';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { UseFormSetValue, FieldValues } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openSaveChanges } from '../../store/ui';\nimport NormalButton from './buttons/normal-button';\n\nexport interface SaveChangesProps {\n  onSave: (e) => any;\n  onReset?: (e) => any;\n  /** @deprecated */\n  setValue?: UseFormSetValue<FieldValues>;\n  obj: object;\n}\n \nconst SaveChanges: React.FunctionComponent<SaveChangesProps> = (props) => {\n  const { closeSnackbar, enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const isOpen = useSelector((s: Store.AppState) => s.ui.saveChangesOpen);\n\n  useEffect(() => {\n    if (!isOpen) return;\n\n    enqueueSnackbar('', {\n      anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\n      content: SaveChanges,\n      key: 'saveChanges',\n      persist: true,\n    });\n  }, [isOpen]);\n\n  const onClickSave = (e) => {\n    closeSnackbar('saveChanges');\n    props.onSave(e);\n    dispatch(openSaveChanges(false));\n  };\n  const onClickReset = (e) => {\n    closeSnackbar('saveChanges');\n    for (const key in props.obj)\n      props.setValue?.(key, props.obj[key]);\n    props.onReset?.(e);\n    dispatch(openSaveChanges(false));\n  };\n  const SaveChanges = () => (\n    <div\n      id=\"saveChanges\"\n      className=\"opacity-95 flex justify-between rounded bg-black p-3 px-5\"\n      style={{ width: '50vw' }}>\n      <span className=\"flex items-center flex-grow-1\">Careful — you have unsaved changes!</span>\n      <span>\n        <NormalButton\n          className=\"bg-transparent font\"\n          onClick={onClickReset}>Reset</NormalButton>\n        <NormalButton\n          className=\"bg-success text-black ml-2\"\n          onClick={onClickSave}>Save</NormalButton>\n      </span>\n    </div>\n  );\n\n  return null;\n}\n \nexport default SaveChanges;","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteChannel, updateChannel } from '../../../store/channels';\nimport { openSaveChanges } from '../../../store/ui';\nimport Input from '../../inputs/input';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport SaveChanges from '../../utils/save-changes';\n \nconst ChannelSettingsOverview: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const { register, handleSubmit, setValue } = useForm();\n\n  const onSave = (e) => {\n    const onUpdate = (payload) => dispatch(updateChannel(channel.id, payload));\n    handleSubmit(onUpdate)(e);\n  };\n  const onDelete = () => {\n    const confirmation = window.confirm('Are you sure you want to delete this guild?');\n    confirmation && dispatch(deleteChannel(channel.id));\n  }\n  \n  return (\n    <form\n      onChange={() => dispatch(openSaveChanges(true))}\n      className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">Channel Overview</h1>\n      </header>\n    \n      <section className=\"w-1/3\">\n        <Input\n          label=\"Name\"\n          name=\"name\"\n          register={register}\n          options={{ value: channel.name }}\n          className=\"pt-5\" />\n        <Input\n          label=\"Summary\"\n          name=\"summary\"\n          register={register}\n          options={{ value: channel.summary }}\n          className=\"pt-5\" />\n      </section>\n\n      <Category\n        className=\"py-2 mt-5\"\n        title=\"Advanced Settings\" />\n\n      <section>\n        <NormalButton\n          type=\"button\"\n          onClick={onDelete}\n          className=\"bg-danger\">Delete</NormalButton>\n      </section>\n\n      <SaveChanges\n        setValue={setValue}\n        onSave={onSave}\n        obj={channel} />\n    </form>    \n  );\n}\n \nexport default ChannelSettingsOverview;","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { byAscending } from '../components/utils/vanilla/sort';\nimport { WS } from '../types/ws';\nimport { actions as api, uploadFile } from './api';\nimport { notInArray } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'guilds',\n  initialState: [] as Store.AppState['entities']['guilds'],\n  reducers: {\n    fetched: (guilds, { payload }: Store.Action<Entity.Guild[]>) => {\n      guilds.push(...payload.filter(notInArray(guilds)));\n    },\n    created: (guilds, { payload }: Store.Action<WS.Args.GuildCreate>) => {\n      guilds.push(payload.guild);\n    },\n    updated: (guilds, { payload }: Store.Action<WS.Args.GuildUpdate>) => {\n      const guild = guilds.find(g => g.id === payload.guildId);\n      Object.assign(guild, payload.partialGuild);\n    },\n    deleted: (guilds, { payload }) => {\n      const index = guilds.findIndex(u => u.id === payload.guildId);\n      guilds.splice(index, 1);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const createGuild = (name: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_CREATE',\n    data: { name } as WS.Params.GuildCreate,\n  }));\n}\n\nexport const updateGuild = (guildId: string, payload: Partial<Entity.Guild>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_UPDATE',\n    data: { guildId, ...payload } as WS.Params.GuildUpdate,\n  }));\n}\n\nexport const uploadGuildIcon = (guildId: string, file: File) => (dispatch) => {\n  const uploadCallback = async ({ url }: REST.From.Post['/upload']) =>\n    dispatch(updateGuild(guildId, { iconURL: url }));\n  dispatch(uploadFile(file, uploadCallback));\n}\n\nexport const deleteGuild = (guildId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_DELETE',\n    data: { guildId } as WS.Params.GuildDelete,\n  }));\n}\n\nexport const getGuild = (id: string) => createSelector(\n  state => state.entities.guilds,\n  guilds => guilds.find(g => g.id === id),\n);\n\nexport const getGuildChannels = (guildId: string | undefined) => createSelector(\n  state => state.entities.channels,\n  channels => channels.filter(c => c.guildId === guildId),\n);\n\nexport const getGuildInvites = (guildId: string | undefined) => createSelector(\n  state => state.entities.invites.list,\n  invites => invites.filter(i => i.guildId === guildId),\n);\n\nexport const getGuildMembers = (guildId: string | undefined) => createSelector(\n  state => state.entities.members,\n  members => members.filter(m => m.guildId === guildId),\n);\n\nexport const getGuildRoles = (guildId: string | undefined) => createSelector(\n  state => state.entities.roles,\n  role => role\n    .filter(r => r.guildId === guildId)\n    .sort(byAscending('position')),\n);\n\nexport const getGuildUsers = (guildId: string | undefined) => createSelector(\n  state => ({\n    members: state.entities.members,\n    users: state.entities.users,\n  }),\n  ({ members, users }) => members\n    .filter(m => m.guildId === guildId)\n    .map(m => users.find(u => u.id === m.userId)!\n  ),\n);\n","export const byAscending = (key: string) => (a, b) => (a[key] > b[key]) ? 1 : -1;\n","import { faIdCard } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FunctionComponent } from 'react';\n\ninterface DevModeMenuSectionProps {\n  ids: { title: string, id: string }[];\n}\n \nconst DevModeMenuSection: FunctionComponent<DevModeMenuSectionProps> = ({ ids }) => {\n  return (\n    <>\n      <hr className=\"mt-3 border-bg-primary pt-2\" />\n      {ids.map(({ title, id }) => (\n        <div key={id}>\n          <div className=\"float-none -mb-1 text-xs\">{title}</div>\n          <div\n            title={title}\n            className=\"flex items-center justify-between pb-2\">\n            <span className=\"muted\">{id}</span>\n            <FontAwesomeIcon icon={faIdCard} />\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\n \nexport default DevModeMenuSection;","import { ContextMenu } from 'react-contextmenu';\nimport { useSelector } from 'react-redux';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface RoleMenuProps {\n  role: Entity.Role;\n}\n\nconst RoleMenu: React.FunctionComponent<RoleMenuProps> = ({ role }) => {\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (\n    <ContextMenu\n      key={role.id}\n      id={role.id}\n      className=\"bg-bg-tertiary rounded shadow w-48 p-2\">\n      <div style={{ color: role.color }}>{role.name}</div>\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Role ID', id: role.id },\n      ]} />}\n    </ContextMenu>\n  );\n}\n \nexport default RoleMenu;","import classNames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { angrySaveChanges } from '../../store/ui';\n\nexport interface TabLinkProps {\n  tab: string;\n  id: string;\n  setTab?: React.Dispatch<React.SetStateAction<string>>;\n  className?: string;\n}\ntype Props = React.HTMLAttributes<HTMLAnchorElement>;\n \nconst TabLink: React.FunctionComponent<TabLinkProps & Props> = (props) => {\n  const { id, tab, setTab, children, className } = props;\n  const saveChangesOpen = useSelector((s: Store.AppState) => s.ui.saveChangesOpen);\n\n  return (\n    <Link\n      {...props}\n      to=\"#\"\n      onClick={() => {\n        if (saveChangesOpen)\n          return angrySaveChanges();\n        setTab?.(id);\n      }}\n      className={classNames(\n        `flex items-center rounded py-1.5 px-2.5 h-8 mb-0.5`,\n        className,\n        { 'active': tab === id })}>{children}</Link>\n  );\n}\n \nexport default TabLink;","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { notInArray } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'members',\n  initialState: [] as Store.AppState['entities']['members'],\n  reducers: {\n    fetched: (members, { payload }: Store.Action<Entity.GuildMember[]>) => {\n      members.push(...payload.filter(notInArray(members)));\n    },\n    added: (members, { payload }: Store.Action<WS.Args.GuildMemberAdd>) => {\n      members.push(payload.member);\n    },\n    removed: (members, { payload }: Store.Action<WS.Args.GuildMemberRemove>) => {\n      const index = members.findIndex(m => m.id === payload.memberId);      \n      members.splice(index, 1);\n    },\n    updated: (members, { payload }: Store.Action<WS.Args.GuildMemberUpdate>) => {\n      const member = members.find(m => m.id === payload.memberId);\n      Object.assign(member, payload.partialMember);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const joinGuild = (inviteCode: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_ADD',\n    data: { inviteCode } as WS.Params.GuildMemberAdd,\n  }));\n}\n\nexport const leaveGuild = (guildId: string) => (dispatch, getState: () => Store.AppState) => {\n  const user = getState().auth.user!;\n\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_REMOVE',\n    data: { guildId, userId: user.id } as WS.Params.GuildMemberRemove,\n  }));\n}\n\nexport const kickMember = (guildId: string, userId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_REMOVE',\n    data: { guildId, userId } as WS.Params.GuildMemberRemove,\n  }));\n}\n\nexport const updateMember = (memberId: string, options: Partial<Entity.GuildMember>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_UPDATE',\n    data: { memberId, ...options } as WS.Params.GuildMemberUpdate,\n  }));\n}\n\nexport const getMember = (guildId: string, userId: string) => createSelector(\n  state => state.entities.members,\n  members => members.find(m => m.guildId === guildId && m.userId === userId),\n);\n\nexport const getSelfMember = (guildId: string | undefined) => createSelector(\n  state => ({ user: state.auth.user, members: state.entities.members }),\n  ({ user, members }) => members.find(m => m.guildId === guildId && m.userId === user.id),\n);\n\nexport const filterByRole = (roleId: string) => createSelector(\n  state => state.entities.members,\n  members => members.filter(m => m.roleIds.includes(roleId)),\n);","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { notInArray } from './utils/filter';\nimport { actions as api } from './api';\nimport { WS } from '../types/ws';\nimport { byMax } from './utils/reduce';\n\nconst slice = createSlice({\n  name: 'roles',\n  initialState: [] as Store.AppState['entities']['roles'],\n  reducers: {\n    fetched: (roles, { payload }: Store.Action<Entity.Role[]>) => {\n      roles.push(...payload.filter(notInArray(roles)));\n    },\n    created: (roles, { payload }: Store.Action<WS.Args.GuildRoleCreate>) => {\n      roles.push(payload.role);\n    },\n    updated: (roles, { payload }: Store.Action<WS.Args.GuildRoleUpdate>) => {\n      const role = roles.find(r => r.id === payload.roleId);\n      Object.assign(role, payload.partialRole);\n    },\n    deleted: (roles, { payload }: Store.Action<WS.Args.GuildRoleDelete>) => {\n      const index = roles.findIndex(r => r.id === payload.roleId);\n      roles.splice(index, 1);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const getRole = (id: string) => createSelector(\n  state => state.entities.roles,\n  roles => roles.find(r => r.id === id),\n);\n\nexport const getRoleByName = (guildId: string, name: string) => createSelector(\n  state => state.entities.roles,\n  roles => roles.find(r => r.guildId === guildId && r.name === name),\n);\n\nexport const getRoles = (ids: string[]) => createSelector(\n  state => state.entities.roles,\n  roles => roles.filter(r => ids.includes(r.id)),\n);\n\nexport const filterHoistedRoles = (guildId: string) => createSelector(\n  state => state.entities.roles,\n  roles => roles.filter(r => r.guildId === guildId && r.hoisted),\n);\n\nexport const getMemberHighestRole = (guildId: string | undefined, userId: string) => createSelector(\n  state => ({ members: state.entities.members, roles: state.entities.roles }),\n  ({ members, roles }) => {\n    const member = members.find(m => m.guildId === guildId && m.userId === userId);\n    return (member) ?\n      roles\n        .filter(r => member.roleIds.includes(r.id))\n        .reduce(byMax('position'))\n      : null;\n  },\n);\n\nexport const createRole = (guildId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_ROLE_CREATE',\n    data: { guildId } as WS.Params.GuildRoleCreate,\n  }));\n}\n\nexport const updateRole = (guildId: string, roleId: string, payload: Partial<Entity.Role>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_ROLE_UPDATE',\n    data: { roleId, guildId, ...payload } as WS.Params.GuildRoleUpdate,\n  }));\n}\n\nexport const deleteRole = (guildId: string, roleId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_ROLE_DELETE',\n    data: { roleId, guildId } as WS.Params.GuildRoleDelete,\n  }));\n}","export const byMax = (k: string) => (acc, val) => (acc < val[k]) ? acc : val;","import { useStore } from 'react-redux';\nimport { PermService } from '../services/perm-service';\n\nconst usePerms = (): PermService => {\n  const state = useStore().getState();\n  return new PermService(state);\n}\n \nexport default usePerms;","import './three-toggle.scoped.css';\nimport classNames from 'classnames';\nimport { FormEvent, useEffect, useState } from 'react';\n\nexport type ThreeToggleProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLInputElement>,\n  HTMLInputElement> & {\n  id: string;\n  defaultValue: 'on' | 'n/a' | 'off';\n  onChange: (e: FormEvent<HTMLInputElement>) => any;\n}\n \nconst ThreeToggle: React.FunctionComponent<ThreeToggleProps> = (props) => {  \n  // default value and current value is one behind\n  const [value, setValue] = useState(props.defaultValue);\n\n  const onClick = ({ currentTarget }) => setValue({\n    'on': 'off',\n    'n/a': 'on',\n    'off': 'n/a',\n  }[currentTarget.value]);\n  \n  return (\n    <div className={classNames(`flex`, props.className)}>\n      <label\n        htmlFor={props.id}\n        className=\"flex items-center cursor-pointer\">\n        <div className=\"relative\">\n          <input\n            id={props.id}\n            onChange={props.onChange}\n            onClick={onClick}\n            value={value}\n            type=\"checkbox\"\n            className=\"sr-only\" />\n          <div className=\"block bg-gray-600 w-14 h-8 rounded-full\" />\n          <div className=\"dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition\" />\n        </div>\n      </label>\n    </div>\n  );\n}\n \nexport default ThreeToggle;","import { useDispatch, useSelector } from 'react-redux';\nimport usePerms from '../../../hooks/use-perms';\nimport { PermissionTypes } from '../../../services/perm-service';\nimport { openSaveChanges } from '../../../store/ui';\nimport ThreeToggle from '../../inputs/three-toggle';\n\ninterface PermToggleProps {\n  permName: string;\n  overrideState: [ChannelTypes.Override, React.Dispatch<React.SetStateAction<ChannelTypes.Override>>];\n}\n\nconst PermToggle: React.FunctionComponent<PermToggleProps> = ({ overrideState, permName }) => {\n  const { description } = usePerms();\n  const category = useSelector((s: Store.AppState) => s.ui.activeChannel)!.type.toLowerCase();\n  const dispatch = useDispatch();\n  const [override, setOverride] = overrideState;\n\n  const isAllowed = (name: string) => Boolean(override.allow & PermissionTypes.All[name]);\n  const isDenied = (name: string) => Boolean(override.deny & PermissionTypes.All[name]);\n  \n  const getDefaultValue = () => {\n    if (isAllowed(permName)) return 'on';\n    else if (isDenied(permName)) return 'off';\n    return 'n/a';\n  };\n  \n  const togglePerm = (name: string, state: string) => {   \n    if (state === 'off') {\n      override.allow &= ~PermissionTypes.All[name];\n      override.deny &= ~PermissionTypes.All[name];\n    } else if (state === 'n/a') {\n      override.allow |= PermissionTypes.All[name];\n      override.deny &= ~PermissionTypes.All[name];\n    } else if(state === 'on') {\n      override.allow &= ~PermissionTypes.All[name];\n      override.deny |= PermissionTypes.All[name];\n    }\n    setOverride(override);\n    dispatch(openSaveChanges(true));\n  }  \n  \n  return (\n    <div className=\"flex items-center justify-between mb-2\">\n      <span>{description[category][permName]}</span>\n      <ThreeToggle\n        id={permName}\n        onChange={e => togglePerm(permName, e.currentTarget.value)}\n        className=\"float-right\"\n        defaultValue={getDefaultValue()} />\n    </div>\n  );\n}\nexport default PermToggle;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport usePerms from '../../../hooks/use-perms';\nimport { PermissionTypes } from '../../../services/perm-service';\nimport { openSaveChanges } from '../../../store/ui';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport PermToggle from './perm-toggle';\n\nexport interface PermOverrides {\n  overrideState: [ChannelTypes.Override, React.Dispatch<React.SetStateAction<ChannelTypes.Override>>];\n}\n \nconst PermOverrides: React.FunctionComponent<PermOverrides> = ({ overrideState }) => {\n  const dispatch = useDispatch();\n  const { description } = usePerms();\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const [override, setOverride] = overrideState;\n\n  const category = channel.type.toLowerCase();  \n  if (channel.type === 'VOICE') return null;\n\n  const clearOverrides = () => {\n    setOverride({ ...override!, allow: 0, deny: 0 });\n    dispatch(openSaveChanges(true));\n  };\n\n  return (\n    <>\n      <div className=\"mb-5\">\n        <Category\n          className=\"muted pb-1.5 mt-5\"\n          title={category} />\n          {Object\n            .keys(description[category])\n            .map(permName => (\n            <div key={permName}>\n              <strong\n                title={PermissionTypes.All[permName]}\n                className=\"secondary\">{permName}</strong>\n              <PermToggle\n                overrideState={overrideState}\n                permName={permName} />\n            </div>\n          ))}\n      </div>\n      <NormalButton\n        onClick={clearOverrides}\n        className=\"bg-white text-black float-left\"\n        type=\"button\">Clear</NormalButton>\n    </>\n  );\n}\n \nexport default PermOverrides;","import Select from 'react-select';\n\ninterface ScarceSelectProps {\n  mapOptions: (entity: any) => { label: string, value: string, color: string };\n  onChange: (select: HTMLSelectElement) => void;\n  unadded: any[];\n}\n \nconst ScarceSelect: React.FunctionComponent<ScarceSelectProps> = (props) => {\n  const colorStyles = {\n    singleValue: () => ({ display: 'none' }),\n    control: () => ({\n      width: '100%',\n      backgroundColor: 'var(--bg-secondary)',\n      borderRadius: '5px',\n    }),\n    option: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: 'var(--bg-secondary)',\n      cursor: 'pointer',\n    }),\n    input: (styles) => ({ ...styles, color: 'var(--font)' }),\n    menu: (styles) => ({\n      ...styles,\n      backgroundColor: 'var(--bg-secondary)',\n    }),\n    multiValue: (styles) => ({\n      ...styles,\n      color: 'var(--font)',\n      backgroundColor: 'var(--bg-tertiary)',\n    }),\n    indicatorSeparator: () => ({ display: 'none' }),\n    indicatorsContainer: (styles) => ({ ...styles, float: 'right' }),\n    multiValueLabel: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: 'var(--bg-tertiary)',\n    }),\n  };\n\n  return (\n    <Select\n      placeholder=\"Add role...\"\n      options={props.unadded.map(props.mapOptions)}\n      styles={colorStyles}\n      onChange={props.onChange} \n      noOptionsMessage={() => 'All roles have been added'} />\n  );\n}\n \nexport default ScarceSelect;","import { useState } from 'react';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { updateChannel } from '../../../store/channels';\nimport { getGuildRoles } from '../../../store/guilds';\nimport { openSaveChanges } from '../../../store/ui';\nimport RoleMenu from '../../ctx-menus/role-menu';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport SaveChanges from '../../utils/save-changes';\nimport TabLink from '../../utils/tab-link';\nimport PermOverrides from './perm-overrides';\nimport ScarceSelect from './scarce-select';\nimport clone from 'clone';\nimport { uniqueBy } from '../../../store/utils/filter';\n \nconst ChannelSettingsPerms: React.FunctionComponent = () => { \n  const { guildId }: any = useParams(); \n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const roles = useSelector(getGuildRoles(guildId));  \n  const dispatch = useDispatch();\n  const defaultOverride = clone(channel.overrides?.[0]) ?? {\n    allow: 0,\n    deny: 0,\n    roleId: roles[0].id,\n  };\n  const [override, setOverride] = useState(defaultOverride);\n  const [roleId, setRoleId] = useState(override.roleId);\n\n  const unaddedRoles = roles.filter(r => !channel.overrides?.some(o => o.roleId === r.id));\n  const overrideRoles = roles.filter(r => channel.overrides?.some(o => o.roleId === r.id));\n\n  const deleteActiveOverride = () => {\n    setOverride({ ...override!, allow: 0, deny: 0 });\n    dispatch(openSaveChanges(true));\n  }\n\n  const RoleDetails: React.FunctionComponent = () => {\n    const onSave = (e) => {\n      const cloned: ChannelTypes.Override[] = clone(channel.overrides) ?? [override!];\n      const filtered = cloned\n        .filter(c => c.allow + c.deny > 0)\n        .filter(uniqueBy('roleId'));\n      \n      const index = filtered.findIndex(o => o.roleId === roleId);\n      (index < 0)\n        ? filtered.push(override)\n        : filtered[index] = override!;\n  \n      dispatch(updateChannel(channel.id, { overrides: filtered }));\n    }\n    const onReset = () => setOverride(defaultOverride);\n\n    return (\n      <>\n        <PermOverrides overrideState={[override, setOverride]} />\n        <NormalButton\n          onClick={deleteActiveOverride}\n          className=\"bg-danger float-right\"\n          type=\"button\">Delete</NormalButton>\n        <SaveChanges\n          onSave={onSave}\n          onReset={onReset}\n          obj={override} />  \n      </>\n    );\n  };\n\n  const role = roles.find(r => r.id === roleId);\n  const alreadyActive = channel.overrides?.some(o => o.roleId === roleId);\n  if (override && role && !alreadyActive)\n    overrideRoles.push(role);\n\n  return (\n    <div className=\"grid grid-cols-12 flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <div className=\"lg:col-span-3 col-span-12\">\n        <nav className=\"pr-10\">\n          {overrideRoles.map(r => (\n            <ContextMenuTrigger id={r.id} key={r.id}>\n              <TabLink\n                style={{ color: r.color }}\n                tab={roleId}\n                setTab={setRoleId}\n                id={r.id}>{r.name}</TabLink>\n              <RoleMenu role={r} />\n            </ContextMenuTrigger>\n          ))}\n\n          <Category className=\"m-1 mt-3\" title=\"Add Role\" />\n          <ScarceSelect\n            mapOptions={r => ({ label: r.name, value: r.id, color: r.color })}\n            onChange={select => {\n              const roleId = select.value;\n              setOverride({ allow: 0, deny: 0, roleId });\n              setRoleId(roleId);\n            }}\n            unadded={unaddedRoles} />\n        </nav>\n      </div>\n      <div className=\"lg:col-span-9 col-span-12\">\n        <RoleDetails />\n      </div>\n    </div>\n  );\n}\n \nexport default ChannelSettingsPerms;","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSnackbar } from 'notistack';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../../store/ui';\n\nconst EscButton: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { closeSnackbar } = useSnackbar();\n\n  const onClick = () => {\n    dispatch(closeModal);\n    closeSnackbar('saveChanges');\n  };\n  \n  return (\n    <div\n      id=\"escButton\"\n      className=\"rounded-full border-2 border-gray-500 cursor-pointer border-white rounded-full px-2 w-16 mt-14\"\n      onClick={onClick}>\n      <FontAwesomeIcon icon={faTimes} color=\"var(--muted)\" />\n      <span className=\"pl-1.5 muted\">ESC</span>\n    </div>\n  );\n}\n\nexport default EscButton;","import { CSSProperties, FunctionComponent } from 'react';\nimport TabLink from './tab-link';\n\ntype Tab = { name: string, id: string, perm?: string };\n\ninterface NavTabsProps {\n  className?: string;\n  tabs: Tab[];\n  tab: string;\n  setTab: React.Dispatch<React.SetStateAction<string>>;\n  linkStyle?: CSSProperties;\n  activeLinkStyle?: CSSProperties;\n  predicate?: (t: Tab) => boolean;\n}\n \nconst NavTabs: FunctionComponent<NavTabsProps> = ({ className, tabs, setTab, tab, predicate, linkStyle, activeLinkStyle }) => {\n  return (\n    <div className={className}>\n      {tabs.map(t => (!predicate || predicate?.(t)) && (\n        <TabLink\n          style={{\n            ...linkStyle,\n            ...(t.id === tab ? activeLinkStyle : {}),\n          }}\n          tab={tab}\n          setTab={setTab}\n          id={t.id}\n          key={t.id}>{t.name}</TabLink>\n      ))}\n    </div>\n  );\n}\n \nexport default NavTabs;","import { useSelector } from 'react-redux';\nimport Category from '../../utils/category';\nimport Modal from '../modal';\nimport { useState } from 'react';\nimport ChannelSettingsOverview from './channel-settings-overview';\nimport ChannelSettingsPerms from './channel-settings-perms';\nimport EscButton from '../../utils/buttons/esc-button';\nimport usePerms from '../../../hooks/use-perms';\nimport NavTabs from '../../utils/nav-tabs';\n\nconst ChannelSettings: React.FunctionComponent = () => {\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const [tab, setTab] = useState('overview');\n  const perms = usePerms();\n\n  return (channel) ? (\n    <Modal typeName={'ChannelSettings'} size=\"full\">\n      <div className=\"grid grid-cols-12 h-full\">\n        <div className=\"col-span-4 bg-bg-secondary\">\n          <nav className=\"float-right flex-grow py-14 w-48 my-1 mr-4\">\n            <Category\n              className=\"muted px-2.5 pb-1.5\"\n              title={`#${channel.name}`} />\n          <NavTabs\n            tabs={[\n              { perm: 'MANAGE_CHANNELS', name: 'Overview', id: 'overview' },\n              { perm: 'MANAGE_CHANNELS', name: 'Perms', id: 'perms' },\n            ]}\n            tab={tab}\n            setTab={setTab}\n            predicate={t => perms.can(t.perm as any, guild.id)} />\n          </nav>\n        </div>\n\n        <div className=\"col-span-6 h-full\">\n          {tab === 'overview' && <ChannelSettingsOverview />}\n          {tab === 'perms' && <ChannelSettingsPerms />}\n        </div>\n\n        <div className=\"col-span-2 h-full\">\n          <EscButton />\n        </div>\n      </div>\n    </Modal>\n  ) : null;\n};\n \nexport default ChannelSettings;","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createChannel } from '../../store/channels';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Input from '../inputs/input';\nimport Modal from './modal';\n\nconst CreateChannel: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, setValue } = useForm();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild);\n\n  const create = (data) => {\n    dispatch(createChannel(guild!.id, data));\n    setValue('name', '');\n  };\n\n  const types: ChannelTypes.Type[] = ['TEXT', 'VOICE'];\n  \n  return (\n    <Modal typeName={'CreateChannel'} size=\"lg\">\n      <form\n        className=\"flex flex-col h-full\"\n        onSubmit={handleSubmit(create)}>\n        <header className=\"text-center mb-5 p-5\">\n          <h1 className=\"text-2xl font-bold inline\">Create Channel</h1>\n        </header>\n      \n        <div className=\"flex-grow p-5\">\n          <Input\n            label=\"Channel Name\"\n            name=\"name\"\n            register={register} />\n        </div>\n      \n      <div className=\"flex-grow pt-0 p-5\">\n        <label\n          htmlFor=\"channelType\"\n          className=\"uppercase text-xs font-semibold\">Channel Type</label>\n        <select\n          id=\"channelType\"\n          className=\"block bg-bg-secondary rounded focus:outline-none w-full h-10 p-2 mt-2\"\n          defaultValue={types[0]}\n          {...register('type')}>\n          {types.map(type => <option key={type} value={type}>{type}</option>)}\n        </select>\n      </div>\n\n        <footer className=\"bg-bg-secondary\">\n          <NormalButton\n            className=\"bg-primary font float-right m-4\">Create</NormalButton>\n        </footer>\n      </form>\n    </Modal>\n  );\n}\n \nexport default CreateChannel;","import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { createGuild } from '../../store/guilds';\nimport { joinGuild } from '../../store/members';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Input from '../inputs/input';\nimport Modal from './modal';\n\nconst CreateGuild: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit } = useForm();\n  const { register: register2, handleSubmit: handleSubmit2 } = useForm();\n\n  const submitCreate = (data) => dispatch(createGuild(data.name));\n  const submitJoin = (data) => dispatch(joinGuild(data.inviteCode));\n\n  return (\n    <Modal\n      className=\"p-5\"\n      typeName={'CreateGuild'}\n      size=\"lg\">\n      <header className=\"text-center mb-5\">\n        <h1 className=\"text-3xl font-bold inline\">Create Guild</h1>\n        <p className=\"lead\">\n          Hang out with your friends. <br />\n          Create an epic guild, or join with friends.\n        </p>\n      </header>\n\n      <h3 className=\"uppercase font-bold mt-10\">Join One</h3>\n\n      <form onSubmit={handleSubmit(submitJoin)}>\n        <Input\n          label=\"Invite Code\"\n          name=\"inviteCode\"\n          register={register} />\n        <NormalButton className=\"bg-tertiary w-full h-11 mt-8\">Join</NormalButton>\n      </form>\n\n      <h3 className=\"uppercase font-bold mt-10\">Make Your Own</h3>\n\n      <form onSubmit={handleSubmit2(submitCreate)}>\n        <Input\n          label=\"Guild Name\"\n          name=\"name\"\n          register={register2} />\n        <NormalButton className=\"bg-primary font w-full h-11 mt-8\">Create</NormalButton>\n      </form>\n    </Modal>\n  );\n}\n\nexport default CreateGuild;","import { createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { notInArray } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'invites',\n  initialState: {\n    fetched: {},\n    list: [] as Entity.Invite[],\n  } as Store.AppState['entities']['invites'],\n  reducers: {\n    fetched: ({ list, fetched }, { payload }: Store.Action<Entity.Invite[]>) => {\n      const guildId = payload[0].guildId;\n      list.push(...payload.filter(notInArray(list)));\n      fetched.push(guildId);\n    },\n    created: ({ list }, { payload }: Store.Action<WS.Args.InviteCreate>) => {\n      list.push(payload.invite);\n    },\n    deleted: ({ list }, { payload }: Store.Action<WS.Args.InviteDelete>) => {\n      const index = list.findIndex(i => i.id === payload.inviteCode);\n      list.splice(index, 1);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const createInvite = (guildId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'INVITE_CREATE',\n    data: { guildId } as WS.Params.InviteCreate,\n  }));\n}\n\nexport const deleteInvite = (inviteCode: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'INVITE_DELETE',\n    data: { inviteCode } as WS.Params.InviteDelete,\n  }));\n}","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '../inputs/input';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Modal from './modal';\nimport { createInvite } from '../../store/invites';\n\nconst CreateInvite: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, setValue } = useForm();\n  const { activeGuild, activeInvite, openModal } = useSelector((s: Store.AppState) => s.ui);\n\n  setValue('inviteCode', activeInvite?.id);\n\n  const isOpen = openModal === 'CreateInvite';\n  useEffect(() => {\n    if (activeInvite || !activeGuild || !isOpen) return;\n\n    dispatch(createInvite(activeGuild.id));\n  }, [isOpen]);\n\n  const copyCode = () => window.navigator.clipboard.writeText(activeInvite!.id);\n  \n  return (activeInvite) ? (\n    <Modal typeName={'CreateInvite'} className=\"p-5\">\n      <header className=\"mb-3\">\n        <h1 className=\"font-bold inline uppercase\">Invite Friends to {activeGuild?.name}</h1>\n      </header>\n\n      <h4 className=\"text-xs uppercase font-bold muted mb-3\">Or Send A Guild Invite To A Friend</h4>\n\n      <div className=\"relative\">\n        <NormalButton\n          onClick={copyCode}\n          className=\"absolute -right-3 top-5 m-4\">Copy</NormalButton>\n        <Input\n          label=\"Invite Code\"\n          name=\"inviteCode\"\n          register={register}\n          autoFocus />\n      </div>\n    </Modal>\n  ) : null;\n}\n \nexport default CreateInvite;","import { UseFormRegister, FieldValues } from 'react-hook-form';\nimport Select from 'react-select';\n\ninterface ChannelSelectProps {\n  className?: string;\n  channels: Entity.Channel[];\n  label?: string;\n  name: string;\n  register: UseFormRegister<FieldValues>;\n  options?: any;\n};\n \nconst ChannelSelect: React.FunctionComponent<any> = (props) => {\n  const channelOptions: any[] = props.channels\n    .filter(c => c.type === 'TEXT')\n    .map(c => ({ label: `#${c.name}`, value: c.id }));\n  const options = [{\n    label: 'None',\n    value: '',\n    color: 'var(--muted)',\n  }].concat(channelOptions);\n  \n  const styles = {\n    singleValue: () => ({ color: 'var(--font)' }),\n    control: () => ({\n      width: '100%',\n      backgroundColor: 'var(--bg-secondary)',\n      border: '1px solid var(--bg-tertiary-alt)',\n      borderRadius: '5px',\n    }),\n    option: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: 'var(--bg-secondary)',\n      cursor: 'pointer',\n    }),\n    input: (styles) => ({ ...styles, caretColor: 'transparent', height: '32px' }),\n    menu: (styles) => ({\n      ...styles,\n      backgroundColor: 'var(--bg-secondary)',\n    }),\n    indicatorSeparator: () => ({ display: 'none' }),\n    indicatorsContainer: (styles) => ({\n      ...styles,\n      float: 'right',\n      marginTop: '-38px',\n    }),            \n  };\n\n  const id = props.name + 'Input';\n\n  return (\n    <div className={props.className}>\n      {props.label &&\n        <label\n          htmlFor={id}\n          className=\"uppercase text-xs font-semibold\">{props.label}</label>}\n      <Select\n        className=\"pt-2\"\n        placeholder=\"Select channel...\"\n        id={id}\n        styles={styles}\n        options={options}\n        register={props.register?.(props.name, props.options)} />\n    </div>\n  );\n}\n \nexport default ChannelSelect;","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteGuild, getGuildChannels, updateGuild, uploadGuildIcon } from '../../../store/guilds';\nimport { openSaveChanges } from '../../../store/ui';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport SaveChanges from '../../utils/save-changes';\nimport Input from '../../inputs/input';\nimport ChannelSelect from '../../inputs/channel-select';\n \nconst GuildSettingsOverview: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const channels = useSelector(getGuildChannels(guild.id));\n  const { register, handleSubmit, setValue } = useForm();\n\n  const onSave = (e) => {\n    const onUpdate = (payload) => dispatch(updateGuild(guild.id, payload));\n    handleSubmit(onUpdate)(e);\n  };\n  const onDelete = () => {\n    const confirmation = window.confirm('Are you sure you want to delete this guild?');\n    confirmation && dispatch(deleteGuild(guild.id));\n  }\n  \n  return (\n    <form\n      id=\"formt\"\n      onChange={() => dispatch(openSaveChanges(true))}\n      className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">Guild Overview</h1>\n      </header>\n    \n      <section className=\"w-1/2\">\n        <Input\n          label=\"Name\"\n          name=\"name\"\n          register={register}\n          options={{ value: guild.name }}\n          className=\"pt-5\" />\n        <Input\n          type=\"file\"\n          accept=\"image/*\"\n          label=\"Icon Image\"\n          name=\"iconURL\"\n          className=\"pt-5\"\n          options={{ value: guild.iconURL }}\n          onChange={(e) => {\n            const file = e.currentTarget?.files?.[0];\n            if (file) dispatch(uploadGuildIcon(guild.id, file));\n          }} />\n        <ChannelSelect\n          // onChange={() => dispatch(openSaveChanges(true))}\n          className=\"pt-5\"\n          label=\"System Channel\"\n          name=\"systemChannelId\"\n          channels={channels}\n          register={register}\n          options={{ setValueAs: guild.systemChannelId }} />\n      </section>\n\n      <Category\n        className=\"py-2 mt-5\"\n        title=\"Advanced Settings\" />\n\n      <section>\n        <NormalButton\n          type=\"button\"\n          onClick={onDelete}\n          className=\"bg-danger\">Delete</NormalButton>\n      </section>\n\n      <SaveChanges\n        setValue={setValue}\n        onSave={onSave}\n        obj={guild} />\n    </form>    \n  );\n}\n \nexport default GuildSettingsOverview;","import './toggle.scoped.css';\nimport classNames from 'classnames';\n\nexport type ToggleProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLInputElement>,\n  HTMLInputElement> & {\n  checked: boolean;\n  id: string;\n}\n \nconst Toggle: React.FunctionComponent<ToggleProps> = (props) => {\n  return (\n    <div className={classNames(`flex`, props.className)}>\n      <label\n        htmlFor={props.id}\n        className=\"flex items-center cursor-pointer\">\n        <div className=\"relative\">\n          <input\n            {...props}\n            id={props.id}\n            type=\"checkbox\"\n            className=\"sr-only\"\n            checked={props.checked} />\n          <div className=\"block bg-gray-600 w-14 h-8 rounded-full\" />\n          <div className=\"dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition\" />\n        </div>\n      </label>\n    </div>\n  );\n}\n \nexport default Toggle;","import { UseFormSetValue, FieldValues } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport usePerms from '../../../hooks/use-perms';\nimport { PermissionTypes } from '../../../services/perm-service';\nimport { openSaveChanges } from '../../../store/ui';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Toggle from '../../inputs/toggle';\n\nexport interface RolePermissionsProps {\n  setRoleValue: UseFormSetValue<FieldValues>;\n  setPerms: React.Dispatch<React.SetStateAction<number>>;\n  perms: number;\n}\n \nconst RolePermissions: React.FunctionComponent<RolePermissionsProps> = ({ perms, setPerms, setRoleValue: setValue }) => {\n  const dispatch = useDispatch();\n  const { description } = usePerms();\n  \n  const fullySetPerms = (perms: number) => {\n    setPerms(perms);\n    setValue('permissions', perms);\n    dispatch(openSaveChanges(true));\n  };\n  const togglePerm = (name: string, on: boolean) =>\n    fullySetPerms((on)\n      ? perms | PermissionTypes.All[name]\n      : perms & ~PermissionTypes.All[name]);\n  const has = (name: string) => Boolean(perms & PermissionTypes.All[name]);\n  const PermToggle = ({ category, permName }) => (\n    <div className=\"flex items-center justify-between mb-2\">\n      <span>{description[category][permName]}</span>\n      <Toggle\n        id={permName}\n        checked={has(permName)}\n        onChange={() => togglePerm(permName, !has(permName))}\n        className=\"float-right\" />\n    </div>\n  );\n\n  return (\n    <>\n      {Object.keys(description).map(category => (\n        <div key={category} className=\"mb-5\">\n          <Category className=\"muted pb-1.5 mt-5\" title={category} />\n            {Object.keys(description[category]).map(permName => (\n              <>\n                <strong\n                  title={PermissionTypes.All[permName]}\n                  className=\"secondary\">{permName}</strong>\n                <PermToggle\n                  key={permName}\n                  category={category}\n                  permName={permName} />\n              </>\n            ))}\n        </div>\n      ))}\n      <NormalButton\n        onClick={() => fullySetPerms(0)}\n        className=\"bg-white text-black\"\n        type=\"button\">Clear</NormalButton>\n      <NormalButton\n        onClick={() => fullySetPerms(PermissionTypes.defaultPermissions)}\n        className=\"bg-secondary text-black ml-2\"\n        type=\"button\">Default</NormalButton>\n    </>\n  );\n}\n \nexport default RolePermissions;","import classNames from 'classnames';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport usePerms from '../../../hooks/use-perms';\nimport { getGuildRoles } from '../../../store/guilds';\nimport { createRole, deleteRole, getRole, updateRole } from '../../../store/roles';\nimport { openSaveChanges } from '../../../store/ui';\nimport RoleMenu from '../../ctx-menus/role-menu';\nimport CircleButton from '../../utils/buttons/circle-button';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../inputs/input';\nimport Toggle from '../../inputs/toggle';\nimport SaveChanges from '../../utils/save-changes';\nimport TabLink from '../../utils/tab-link';\nimport RolePermissions from './role-permissions';\n \nconst GuildSettingsRoles: React.FunctionComponent = () => {  \n  const dispatch = useDispatch();\n  const { handleSubmit, register, setValue, getValues } = useForm();\n  const { guildId }: any = useParams();\n  const roles = useSelector(getGuildRoles(guildId));\n  const [activeRoleId, setActiveRoleId] = useState(roles[0].id);\n  const activeRole = useSelector(getRole(activeRoleId));\n  const [perms, setPerms] = useState(0);\n  const [hoisted, setHoisted] = useState(false);\n  const permsService = usePerms();\n\n  useEffect(() => {\n    if (!activeRole) return setActiveRoleId(roles[0].id);\n\n    for (const name of ['name', 'color', 'permissions', 'hoisted'])\n      setValue(name, activeRole[name]);\n    setPerms(activeRole.permissions);\n    setHoisted(activeRole.hoisted);\n  }, [activeRole]);\n\n  const RoleDetails = () => {    \n    return (\n      <form\n        className=\"mb-10\"\n        onChange={() => dispatch(openSaveChanges(true))}>\n        <div className=\"flex gap-4\">\n          <Input\n            label=\"Name\"\n            name=\"name\"\n            register={register} />\n          <Input\n            label=\"Color\"\n            name=\"color\"\n            type=\"color\"\n            register={register} />\n        </div>\n\n        <div className=\"mt-5\">\n          <Category title=\"Options\" className=\" pb-1.5 mt-5\" />\n          <span>\n            <span>Separate role on member list</span>\n            <Toggle\n              id=\"hoisted\"\n              checked={hoisted}\n              {...register('hoisted')}\n              onChange={() => {\n                setHoisted(!hoisted);\n                setValue('hoisted', !hoisted);\n              }}\n              className=\"float-right\" />\n          </span>\n        </div>\n  \n        <RolePermissions\n          perms={perms}\n          setPerms={setPerms}\n          setRoleValue={setValue}  />\n        <NormalButton\n          onClick={() => dispatch(deleteRole(guildId, activeRole!.id))}\n          className=\"bg-danger float-right\"\n          type=\"button\">Delete</NormalButton>\n      </form>\n    )\n  }\n\n  const onSave = (e) => {\n    const onUpdate = (payload) => dispatch(updateRole(guildId, activeRole!.id, payload));\n    handleSubmit(onUpdate)(e);\n  };  \n  const byPosition = (a, b) => (a.position > b.position) ? -1 : 1;\n  const selfIsHigher = (r) => permsService.memberIsHigher(guildId, [r.id]);\n\n  return (\n    <div className=\"grid grid-cols-12 flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <div className=\"lg:col-span-3 col-span-12\">\n        <nav className=\"pr-10\">\n          {roles.sort(byPosition).map(r => (\n            <ContextMenuTrigger id={r.id} key={r.id}>\n              <TabLink\n                className={classNames({\n                  'cursor-not-allowed opacity-25': !selfIsHigher(r),\n                })}\n                key={r.id}\n                style={{ color: r.color }}\n                tab={activeRoleId}\n                setTab={(...args) => selfIsHigher(r) && setActiveRoleId(...args)}\n                id={r.id}>{r.name}</TabLink>\n              <RoleMenu role={r} />\n            </ContextMenuTrigger>\n          ))}\n          <CircleButton\n            onClick={() => dispatch(createRole(guildId))}\n            style={{ color: 'var(--success)' }}\n            className=\"ring-green-500 m-2\">Create</CircleButton>\n        </nav>\n      </div>\n      <div className=\"lg:col-span-9 col-span-12\">\n        {activeRole && <RoleDetails />}\n      </div>\n\n      <SaveChanges\n        setValue={(...args) => {\n          setValue(...args);\n          setPerms(activeRole!.permissions);\n          setHoisted(activeRole!.hoisted);\n        }}\n        onSave={onSave}\n        obj={getValues()} />  \n    </div>\n  );\n}\n \nexport default GuildSettingsRoles;","import { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getGuildInvites } from '../../../store/guilds';\nimport { deleteInvite } from '../../../store/invites';\nimport { openSaveChanges } from '../../../store/ui';\nimport CircleButton from '../../utils/buttons/circle-button';\n\nconst GuildSettingsInvites: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { guildId }: any = useParams();\n  const invites = useSelector(getGuildInvites(guildId));\n  \n  const Invites = () => (\n    <div className=\"mt-2\">\n      {invites.map(i => (\n        <div className=\"w-full mb-3\">\n          <strong>{i.id}</strong>\n          <span className=\"float-right\">\n            <button\n              type=\"button\"\n              className=\"danger rounded-full border-2 border-red-500 px-2\"\n              onClick={() => dispatch(deleteInvite(i.id))}>x</button>\n          </span>\n        </div>\n      ))}\n      {!invites.length && <span>No invites created.</span>}\n    </div>\n  );\n  \n  return (\n    <form\n      onChange={() => dispatch(openSaveChanges(true))}\n      className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">Invites</h1>\n      </header>\n    \n      <Invites />\n    </form>    \n  );\n}\n \nexport default GuildSettingsInvites;","import { useSelector } from 'react-redux';\nimport Category from '../../utils/category';\nimport Modal from '../modal';\nimport { useState } from 'react';\nimport GuildSettingsOverview from './guild-settings-overview';\nimport GuildSettingsRoles from './guild-settings-roles';\nimport EscButton from '../../utils/buttons/esc-button';\nimport usePerms from '../../../hooks/use-perms';\nimport GuildSettingsInvites from './guild-settings-invites';\nimport NavTabs from '../../utils/nav-tabs';\n\nconst GuildSettings: React.FunctionComponent = () => {\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const [tab, setTab] = useState('overview');\n  const perms = usePerms();\n\n  return (guild) ? (\n    <Modal typeName={'GuildSettings'} size=\"full\">\n      <div className=\"grid grid-cols-12 h-full\">\n        <div className=\"col-span-4 bg-bg-secondary\">\n          <nav className=\"float-right flex-grow py-14 w-48 my-1 mr-4\">\n            <Category\n              className=\"muted px-2.5 pb-1.5\"\n              title={guild.name} />\n          <NavTabs\n            tabs={[\n              { perm: 'MANAGE_GUILD', name: 'Overview', id: 'overview' },\n              { perm: 'MANAGE_ROLES', name: 'Roles', id: 'roles' },\n              { perm: 'MANAGE_INVITES', name: 'Invites', id: 'invites' },\n            ]}\n            tab={tab}\n            setTab={setTab}\n            predicate={t => perms.can(t.perm as any, guild.id)} />\n          </nav>\n        </div>\n\n        <div className=\"col-span-6 h-full\">\n          {tab === 'overview' && <GuildSettingsOverview />}\n          {tab === 'roles' && <GuildSettingsRoles />}\n          {tab === 'invites' && <GuildSettingsInvites />}\n        </div>\n\n        <div className=\"col-span-2 h-full\">\n          <EscButton />\n        </div>\n      </div>\n    </Modal>\n  ) : null;\n};\n \nexport default GuildSettings;","import { useSelector } from 'react-redux';\nimport Modal from './modal';\n\nconst CreateInvite: React.FunctionComponent = () => {\n  const resource = useSelector((s: Store.AppState) => s.ui.activeResource);\n  const fullURL = process.env.REACT_APP_CDN_URL! + resource;\n\n  return (resource) ? (\n    <Modal\n      size=\"lg\"\n      typeName={'ImagePreview'}\n      className=\"p-5 bg-transparent \">\n      <img\n        src={fullURL}\n        onError={(e) => {\n          e.currentTarget.onerror = null;\n          e.currentTarget.src = `${process.env.REACT_APP_CDN_URL}/images/image-not-found.png`;\n        }} />\n      <a\n        style={{ color: 'var(--normal)' }}\n        className=\"pt-2\"\n        href={fullURL}\n        target=\"_blank\">View Original</a>\n    </Modal>\n  ) : null;\n}\n \nexport default CreateInvite;","import { FunctionComponent, HTMLAttributes } from 'react';\n\nconst Image: FunctionComponent<any> = (props) => {\n  return (\n    <img\n      onError={e => e.currentTarget.src = `${process.env.REACT_APP_CDN_URL}/avatars/unknown.png`}\n      {...props} />\n    );\n}\n \nexport default Image;","import classNames from 'classnames';\nimport { useLocation } from 'react-router-dom';\nimport Image from '../../utils/image';\n\nimport './sidebar-icon.scoped.css';\n\nexport interface SidebarIconProps {\n  imageURL?: string;\n  name: string;\n  to?: string;\n  classes?: string;\n}\n\nconst SidebarIcon: React.FunctionComponent<SidebarIconProps> = (props) => {\n  let { to, imageURL, name, classes = 'font' } = props;\n  const location = useLocation();\n  if (imageURL)\n    imageURL = `${process.env.REACT_APP_CDN_URL}${imageURL}`;\n\n  const getAbbr = (name: string) => name\n    .split(' ')\n    .map(n => n[0])\n    .join('')\n    .slice(0, 3);\n\n  const Icon = () => (imageURL)\n    ? <Image\n        className=\"h-12 w-12\"\n        src={imageURL}\n        alt={name} />\n    : <span className=\"select-none flex items-center justify-center h-12 w-12\">{getAbbr(name)}</span>;\n\n  const isActive = to && location.pathname.startsWith(to);\n  const activeClasses = (isActive)\n    ? 'rounded-xl bg-primary'\n    : 'rounded-full bg-bg-primary';\n\n  return (\n    <div\n      className={classNames('wrapper sidebar-icon', { 'active': isActive })}\n      title={name}>\n      <div className=\"selected rounded bg-white absolute -left-1 h-0 w-2\" />\n      <div className={classNames(\n          `cursor-pointer guild-icon flex justify-center mb-2`,\n          activeClasses, classes,\n        )}>\n        <Icon />\n      </div>\n    </div>\n  );\n}\n\nexport default SidebarIcon;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\nimport { getMemberHighestRole } from '../../store/roles';\nimport { useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport Image from '../utils/image';\n\nexport interface UsernameProps {\n  user: Entity.User;\n  guild?: Entity.Guild;\n  size?: 'sm' | 'md' | 'lg';\n}\n \nconst Username: React.FunctionComponent<UsernameProps> = ({ guild, user, size = 'md' }) => {\n  const highestRole = useSelector(getMemberHighestRole(guild?.id, user.id));\n\n  const userOwnsGuild = guild?.ownerId === user.id;\n  const discrim = user.discriminator\n    .toString()\n    .padStart(4, '0');\n  const isOnline = user.status === 'ONLINE';\n\n  const UserPresence = () => {\n    const blob = {\n      color: (isOnline) ? 'bg-success' : 'bg-gray-500',\n      size: {\n        'lg': 'h-6 w-6',\n        'md': 'h-3.5 w-3.5',\n        'sm': 'h-2 w-2',\n      }[size],\n    };\n\n    return (\n      <span className=\"rounded-full absolute flex -right-0.5 -bottom-0.5\">\n        <span\n          style={{ border: '2px solid var(--bg-secondary)' }}\n          className={classNames(\n            `relative inline-flex rounded-full px-1`,\n            blob.size, blob.color, { 'hidden': size === 'sm' })} />\n      </span>\n    );\n  }\n\n  const sizeClass = {\n    'lg': 'text-lg',\n    'md': 'text-sm',\n    'sm': 'text-sm',\n  }[size];\n\n  return (\n    <div className={classNames(\n      `flex items-center px-2`,\n      'cursor-pointer',\n      { 'opacity-50': !isOnline })}>\n      <div className=\"relative avatar mr-2\">\n        <UserPresence />\n        <Image\n          className={{\n            'sm': 'select-none rounded-full w-6 h-6',\n            'md': `select-none rounded-full w-8 h-8`,\n            'lg': `select-none rounded-full w-20 h-20`,\n          }[size]}\n          src={`${process.env.REACT_APP_CDN_URL}${user.avatarURL}`} />\n      </div>\n      <div className=\"tag leading-4\">\n        <h4 className={classNames({ 'font-bold': size !== 'sm' }, sizeClass)}>\n          <span\n            style={{ color: highestRole?.color ?? 'var(--font)' }}\n            className={classNames({ 'font-light text-base': guild })}>{user.username}</span>\n          <span className=\"text-yellow-400 ml-1\">\n            {(userOwnsGuild && size !== 'sm') && <FontAwesomeIcon icon={faCrown} />}\n          </span>\n        </h4>\n        {(!guild && size !== 'sm') &&\n          <div className={classNames(`discriminator`, sizeClass)}>#{discrim}</div>}\n      </div>\n    </div>\n  );\n}\n \nexport default Username;","import { faBug, faGavel, faRocket, faSun, faVideo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { FunctionComponent, useState } from 'react';\nimport { useSelector, useStore } from 'react-redux';\nimport { getGuild } from '../../store/guilds';\nimport SidebarIcon from '../navigation/sidebar/sidebar-icon';\nimport Username from '../user/username';\nimport Category from '../utils/category';\nimport NavTabs from '../utils/nav-tabs';\nimport Modal from './modal';\n\nconst UserProfile: FunctionComponent = () => {\n  const selfUser = useSelector((s: Store.AppState) => s.auth.user)!;\n  const user = useSelector((s: Store.AppState) => s.ui.activeUser);\n  const [tab, setTab] = useState('info');\n\n  type BadgeIcon = {\n    [k in UserTypes.Badge]: {\n      color: string,\n      icon: any,\n      title: string,\n      styles?: React.CSSProperties,\n    };\n  };\n  const badgeIcons: BadgeIcon = {\n    'BUG_1': {\n      color: 'bronze',\n      icon: faBug,\n      title: 'Has destroyed a few bugs.',\n    },\n    'BUG_2': {\n      color: 'silver',\n      icon: faBug,\n      title: 'Has destroyed many bugs.',\n    },\n    'BUG_3': {\n      color: 'gold',\n      icon: faBug,\n      title: 'Are there any bugs left?'\n    },\n    'PREMIUM': {\n      color: 'var(--heading)',\n      icon: faRocket,\n      title: 'This user has transcended the realm of epicness.',\n    },\n    'OG': {\n      color: 'orange',\n      icon: faSun,\n      title: 'Was here since the very beginning.',\n    },\n    'STAFF': {\n      color: 'var(--primary)',\n      icon: faGavel,\n      title: 'Staff.',\n    },\n    'VIEWER': {\n      color: 'var(--tertiary)',\n      icon: faVideo,\n      title: 'This user was noticed in live chat.',\n    },\n  };\n\n  const UserBadges = () => (user) ? (\n    <div className=\"float-right -mt-16\">\n      {user.badges.map((b, i) => {\n        const { color, icon, title, styles } = badgeIcons[b];\n        return (\n          <FontAwesomeIcon\n            key={i}\n            title={title}\n            className={classNames('pr-3')}\n            style={{ ...styles, color }}\n            size=\"2x\"\n            icon={icon} />\n        );\n      })}\n    </div>\n  ) : null;\n\n  const UserInfo = () => (user) ? (\n    <div className=\"grid grid-cols-2\">\n      <div className=\"col-span-1\">\n        <strong>Created: </strong>\n        <span title={user.createdAt.toString()}>{moment(user.createdAt).format('DD/MM/YYYY')}</span>\n      </div>\n    </div>\n  ) : null;\n\n  const UserMutualGuilds = () => {\n    const store = useStore();\n\n    if (!user) return null;\n    \n    const mutualGuilds = selfUser.guildIds\n      .filter(id => user.guildIds.includes(id))\n      .map(id => getGuild(id)(store.getState()));\n    \n    return (\n      <div>\n        <Category\n          title={`${mutualGuilds.length} Mutual Guilds`}\n          className=\"mb-2\" />\n        <div className=\"mx-2\">\n          {mutualGuilds.map(guild => (guild)\n            ? <div\n                className=\"w-12 -ml-2 float-left scale-200\"\n                key={guild.id}>\n                <SidebarIcon\n                  imageURL={guild.iconURL}\n                  name={guild.name} />\n              </div>\n            : null\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (user) ? (\n    <Modal\n      typeName={'UserProfile'}\n      size=\"md\">\n      <header className=\"bg-bg-tertiary\">\n        <div className=\"p-5\">\n          <Username size=\"lg\" user={user} />\n          <UserBadges />\n        </div>\n        <hr className=\"border-bg-primary\" />\n        <NavTabs\n          className=\"normal p-2\"\n          tab={tab}\n          setTab={setTab}\n          tabs={[\n            { name: 'Info', id: 'info' },\n            { name: 'Mutual Guilds', id: 'mutualGuilds' },\n          ]}\n          linkStyle={{\n            color: 'var(--normal)',\n            fontWeight: 'bold',\n            padding: '0 0 30px 0',\n            margin: '5px 10px',\n            borderRadius: 0,\n            display: 'inline-block',\n          }}\n          activeLinkStyle={{ borderBottom: '3px solid var(--normal)' }} />\n      </header>\n      <main className=\"p-4\">\n        {(tab === 'info') && <UserInfo />}\n        {(tab === 'mutualGuilds') && <UserMutualGuilds />}\n      </main>\n    </Modal>\n  ) : null;\n}\n \nexport default UserProfile;","import { createSlice } from '@reduxjs/toolkit';\n\nconst get = (key: keyof Store.AppState['config']) =>\n  JSON.parse(localStorage.getItem(`config.${key as string}`) as any);\nconst set = (key: keyof Store.AppState['config'], value: any) =>\n  JSON.parse(localStorage.setItem(`config.${key as string}`, value) as any);\n\nconst slice = createSlice({\n  name: 'config',\n  initialState: {\n    devMode: get('devMode') ?? false,\n    memberListToggled: get('memberListToggled') ?? true,\n  } as Store.AppState['config'],\n  reducers: {\n    toggleDevMode: (config) => {\n      const value = !config.devMode;\n      config.devMode = value;\n    },\n    toggleMemberList: (config) => {\n      const value = !config.memberListToggled;\n      config.memberListToggled = value;\n    },\n  }\n})\nconst actions = slice.actions;\nexport default slice.reducer;\n\nexport const toggleDevMode = () => (dispatch, getState: () => Store.AppState) => {\n  const config = getState().config;\n\n  dispatch(actions.toggleDevMode());\n  set('devMode', !config.devMode);\n}\nexport const toggleMemberList = () => (dispatch, getState: () => Store.AppState) => {\n  const config = getState().config;\n\n  dispatch(actions.toggleMemberList());\n  set('memberListToggled', !config.memberListToggled);\n}","import { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'meta',\n  initialState: {\n    fetchedEntities: false,\n    hasListenedToWS: false,\n    userCount: NaN,\n  } as Store.AppState['meta'],\n  reducers: {\n    fetchedEntities: (meta) => { meta.fetchedEntities = true },\n    listenedToWS: (meta) => { meta.hasListenedToWS = true },\n    ping: (meta, { payload }) => { meta.ping = payload },\n    updatedUserCount: (meta, { payload }) => { meta.userCount = payload },\n  }\n});\nexport const actions = slice.actions;\nexport default slice.reducer;","import { createSlice, createSelector } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api, uploadFile } from './api';\nimport { actions as meta } from './meta';\nimport { notInArray } from './utils/filter';\nimport { token } from './utils/rest-headers';\n\nconst slice = createSlice({\n  name: 'users',\n  initialState: [] as Store.AppState['entities']['users'],\n  reducers: {\n    fetched: (users, { payload }: Store.Action<Entity.User[]>) => {\n      users.push(...payload.filter(notInArray(users)));\n    },\n    updated: (users, { payload }: Store.Action<WS.Args.UserUpdate>) => {\n      const user = users.find(u => u.id === payload.userId);\n      if (user) Object.assign(user, payload.partialUser);\n    },\n    deleted: (users, { payload }: Store.Action<WS.Args.UserDelete>) => {\n      const index = users.findIndex(u => u.id === payload.userId);\n      users.splice(index, 1);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const updateSelf = (payload: Partial<Entity.User>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'USER_UPDATE',\n    data: { ...payload, token: token() } as WS.Params.UserUpdate,\n  }));\n}\n  \nexport const toggleBlockUser = (userId: string) => (dispatch, getState: () => Store.AppState) => {\n  console.log('hi');  \n  const user = getState().auth.user!;\n  const ignored = JSON.parse(JSON.stringify(user.ignored));\n  ignored.userIds = ignored.userIds ?? [];\n\n  if (!ignored.userIds.includes(userId))\n    ignored.userIds.push(userId);\n  else {\n    const index = ignored.userIds.indexOf(userId);\n    ignored.userIds.splice(index, 1);\n  }\n\n  dispatch(api.wsCallBegan({\n    event: 'USER_UPDATE',\n    data: { token: token(), ignored } as WS.Params.UserUpdate,\n  }));  \n}\n\nexport const deleteSelf = () => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'USER_DELETE',\n    data: { token: token() } as WS.Params.UserDelete,\n  }));\n}\n\nexport const countUsers = () => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [meta.updatedUserCount.type],\n    url: '/users/count',\n  }));\n}\n\nexport const uploadUserAvatar = (file: File) => (dispatch) => {\n  const uploadCallback = async ({ url }: REST.From.Post['/upload']) =>\n    dispatch(updateSelf({ avatarURL: url }));\n  dispatch(uploadFile(file, uploadCallback));\n}\n\nexport const getUser = (id: string) => createSelector(\n  state => state.entities.users,\n  users => users.find(u => u.id === id) ?? {\n    avatarURL: '/avatars/unknown.png',\n    discriminator: 0,\n    username: 'Unknown',\n  } as Entity.User,\n);\n\nexport const getUserByTag = (tag: string) => createSelector(\n  state => state.entities.users,\n  users => {\n    const [username, discrim] = tag.split('#');\n    return users.find(u => u.username === username && u.discriminator === +discrim);\n  }\n);","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleDevMode } from '../../../store/config';\nimport { openSaveChanges } from '../../../store/ui';\nimport { updateSelf, deleteSelf, uploadUserAvatar } from '../../../store/users';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../inputs/input';\nimport Toggle from '../../inputs/toggle';\nimport SaveChanges from '../../utils/save-changes';\n\nconst UserSettingsOverview: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((s: Store.AppState) => s.auth.user)!;\n  const { register, handleSubmit, setValue } = useForm();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  const onSave = (e) => {\n    const onUpdate = (payload) => dispatch(updateSelf(payload));\n    handleSubmit(onUpdate)(e);\n  };\n  const onDelete = () => {\n    const confirmation = window.confirm('Are you sure you want to delete your user?');\n    if (confirmation) dispatch(deleteSelf());\n  }\n\n  return (\n    <div className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <form onChange={() => dispatch(openSaveChanges(true))}>\n        <header>\n          <h1 className=\"text-xl font-bold inline\">My Account</h1>\n        </header>\n\n        <section className=\"w-1/2\">\n          <Input\n            label=\"Username\"\n            name=\"username\"\n            register={register}\n            options={{ value: user.username }}\n            className=\"pt-5\" />\n          <Input\n            label=\"Email\"\n            name=\"email\"\n            register={register}\n            options={{ value: user.email }}\n            className=\"pt-5\" />\n          <Input\n            type=\"file\"\n            accept=\"image/*\"\n            label=\"Avatar Image\"\n            className=\"pt-5\"\n            name=\"avatarURL\"\n            register={(): any => {}}\n            options={{ value: user.avatarURL }}\n            onChange={(e) => {\n              const file = e.currentTarget?.files?.[0];\n              if (file) dispatch(uploadUserAvatar(file));\n            }} />\n        </section>\n\n        <SaveChanges\n          setValue={setValue}\n          onSave={onSave}\n          obj={user} />\n      </form>\n\n      <Category\n      className=\"py-2 mt-5\"\n      title=\"Advanced Settings\" />\n\n      <section>\n      <div className=\"w-1/2 pb-5\">\n        <label htmlFor=\"devMode\">Dev Mode</label>\n        <Toggle\n          onChange={(e) => e.stopPropagation()}\n          onClick={() => dispatch(toggleDevMode())}\n          checked={devMode}\n          className=\"float-right\"\n          id=\"devMode\" />\n      </div>\n\n      <NormalButton\n        id=\"deleteUserButton\"\n        role=\"button\"\n        onClick={handleSubmit(onDelete)}\n        className=\"bg-danger\">Delete</NormalButton>\n      </section>\n    </div>\n  );\n}\n \nexport default UserSettingsOverview;","import { createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { openDialog } from './ui';\nimport { headers, token } from './utils/rest-headers';\n\nconst slice = createSlice({\n  name: 'auth',\n  initialState: {\n    attemptedLogin: false,\n    shouldVerify: false,\n  } as Store.AppState['auth'],\n  reducers: {\n    ready: (auth, { payload }: Store.Action<WS.Args.Ready>) => {\n      auth.user = payload.user;\n    },\n    updatedUser: (auth, { payload }: Store.Action<WS.Args.UserUpdate>) => {\n      Object.assign(auth.user, payload.partialUser);\n    },\n    loggedIn: (auth) => { auth.attemptedLogin = true },\n    loggedOut: (auth) => {\n      delete auth.user;\n      auth.attemptedLogin = false;\n      auth.shouldVerify = false;\n    },\n    shouldVerify: (auth) => { auth.shouldVerify = true }\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const ready = () => (dispatch, getState: () => Store.AppState) => {\n  if (getState().auth.user || !token()) return;\n\n  dispatch(api.wsCallBegan({\n    event: 'READY',\n    data: { token: token() } as WS.Params.Ready,\n  }));\n}\n\n// handle side effects here\nexport const loginUser = (data: REST.To.Post['/auth/login']) => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    method: 'post',\n    data,\n    url: `/auth/login`,\n    // TODO: replace with snackbar\n    callback: (payload) => {\n      if (payload.token) {\n        localStorage.setItem('token', payload.token);\n        dispatch(ready());\n      }\n      if (payload.message) {\n        dispatch(actions.shouldVerify());\n        dispatch(openDialog({ content: payload.message, variant: 'info' }))\n      }\n    }\n  }));\n}\n\nexport const forgotPasswordEmail = (email: string) => (dispatch) => {\n  if (!email) return;\n  \n  dispatch(api.restCallBegan({\n    callback: () => dispatch(openDialog({\n      variant: 'info',\n      content: 'Sent reset password instructions to email, if email is registered',\n    })),\n    url: `/auth/email/forgot-password?email=${email}`,\n  }));\n}\n\nexport const logoutUser = () => (dispatch) => {\n  dispatch(actions.loggedOut());\n  localStorage.removeItem('token');\n}\n\nexport const registerUser = (data: REST.To.Post['/auth/register']) => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [actions.loggedIn.type],\n    method: 'post',\n    data,\n    url: `/auth/register`,\n    callback: (payload) => {\n      localStorage.setItem('token', payload);\n      dispatch(ready());\n    },\n  }));\n}\nexport const sendVerifyCode = (code: string) => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    url: `/auth/verify?code=${code}`,\n    callback: ({ message, token }: REST.From.Get['/auth/verify']) => {\n      if (message) dispatch(openDialog({ content: message, variant: 'info' }));\n      if (token) {\n        localStorage.setItem('token', token);\n        dispatch(ready());\n      }\n    },\n  }))\n}\n\nexport const changePassword = (oldPassword: string, newPassword: string) => (dispatch, getState: () => Store.AppState) => {\n  const user = getState().auth.user!;\n  \n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    method: 'post',\n    url: `/auth/change-password`,\n    data: { email: user.email, oldPassword, newPassword },\n    callback: ({ message, token }: REST.From.Post['/auth/change-password']) => {\n      if (message) dispatch(openDialog({ content: message, variant: 'info' }));\n      if (token) localStorage.setItem('token', token);\n    },\n  }))\n}","import { faCheckCircle, faExclamationTriangle, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changePassword } from '../../../store/auth';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../inputs/input';\n\nconst UserSettingsSecurity: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const passwordForm = useForm();\n  const user = useSelector((s: Store.AppState) => s.auth.user)!;\n\n  const onChangePassword = (e) => {\n    const { oldPassword, newPassword } = passwordForm.getValues();\n    const onUpdate = () => dispatch(changePassword(oldPassword, newPassword));\n    passwordForm.handleSubmit(onUpdate)(e);\n  };\n\n  return (\n    <div className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">Account Security</h1>\n      </header>\n\n      <Category\n        className=\"py-2 mt-5\"\n        title=\"Change Password\" />\n\n      <section className=\"w-1/2\">\n        {!user.verified && <div className=\"secondary\">\n          <FontAwesomeIcon icon={faInfoCircle} />\n          <span className=\"ml-1\">To change your password, your email must be verified.</span>\n        </div>}\n\n        <Input\n          label=\"Old Password\"\n          name=\"oldPassword\"\n          type=\"password\"\n          register={passwordForm.register} />\n\n        <Input\n          label=\"New Password\"\n          name=\"newPassword\"\n          type=\"password\"\n          className=\"pt-5\"\n          register={passwordForm.register} />\n\n        <div className=\"flex justify-center w-full mt-4\">\n          <NormalButton\n            onClick={passwordForm.handleSubmit(onChangePassword)}\n            className=\"bg-warning\">Change</NormalButton>\n        </div>\n      </section>\n\n      <section className=\"mt-10\">\n        <Category title=\"Login Status\" className=\"pb-2\" />\n\n        {(user.verified)\n          ? <div className=\"success\">\n              <FontAwesomeIcon icon={faCheckCircle} className=\"mr-1\" />\n              <span>Your email is verified and email 2FA is enabled.</span>\n            </div>\n          : <div className=\"warning\">\n              <FontAwesomeIcon icon={faExclamationTriangle} className=\"mr-1\" />\n              <span>Your email is unverified which means email 2FA is unavailable.</span>\n            </div>}\n      </section>\n    </div>    \n  );\n}\n \nexport default UserSettingsSecurity;","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport EscButton from '../../utils/buttons/esc-button';\nimport Category from '../../utils/category';\nimport NavTabs from '../../utils/nav-tabs';\nimport Modal from '../modal';\nimport UserSettingsOverview from './user-settings-overview';\nimport UserSettingsSecurity from './user-settings-security';\n\nconst UserSettings: React.FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const [tab, setTab] = useState('overview');\n\n  return (user) ? (\n    <Modal\n      typeName={'UserSettings'}\n      size=\"full\">\n      <div className=\"grid grid-cols-12 h-full\">\n        <div className=\"col-span-4 bg-bg-secondary\">\n          <nav className=\"float-right flex-grow py-14 w-48 my-1 mr-4\">\n            <Category\n              className=\"normal px-2.5 pb-1.5\"\n              title=\"User Settings\" />\n            <NavTabs\n              tab={tab}\n              setTab={setTab}\n              tabs={[\n                { name: 'Overview', id: 'overview' },\n                { name: 'Security', id: 'security' },\n              ]} />\n            <div className=\"rounded-sm bg-bg-modifier-accent h-px w-42 my-2 mx-2.5 \" />\n\n            <Link\n              to=\"/logout\"\n              className=\"danger flex items-center rounded py-1.5 px-2.5 h-8 mb-0.5\">Logout</Link>\n          </nav>\n        </div>\n\n        <div className=\"col-span-6 h-full\">\n          {tab === 'overview' && <UserSettingsOverview />}\n          {tab === 'security' && <UserSettingsSecurity />}\n        </div>\n\n        <div className=\"col-span-2 h-full\">\n          <EscButton />\n        </div>\n      </div>\n    </Modal>\n  ) : null;\n}\n\nexport default UserSettings;","import io from 'socket.io-client';\nimport { WS } from '../types/ws';\n\nconst ws = (io as any).connect(process.env.REACT_APP_ROOT_API_URL, {\n  secure: true,\n  path: `/ws`,\n  transports: ['websocket', 'polling', 'flashsocket'],\n});\n\nws.io.on('open', () => console.log('Connected to WS Server'));\n\nexport default ws as WSClient;\n\ninterface WSClient {\n  emit: <K extends keyof WS.To>(event: K, args: WS.To[K]) => any;\n  on: <K extends keyof WS.From>(event: K | 'error' | 'disconnect', callback: (args: WS.From[K]) => any) => any;\n  off: (event: string, callback?: any) => any;\n  disconnect: () => any;\n}","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport moment from 'moment';\nimport { actions as api } from './api';\n\nconst slice = createSlice({\n  name: 'typing',\n  initialState: [] as Store.AppState['entities']['typing'],\n  reducers: {\n    userTyped: (typing, { payload }: Store.Action<{ channelId: string, userId: string }>) => {      \n      typing.push(payload);\n    },\n    userStoppedTyping: (typing, { payload }: Store.Action<{ channelId: string, userId: string }>) => {\n      const index = getIndex(typing, payload.userId, payload.channelId);\n      typing.splice(index, 1);\n    },\n  },\n});\n\nconst getIndex = (typing: any[], userId: string, channelId: string) => {\n  return typing.findIndex(t =>\n    t.channelId === channelId\n    && t.userId === userId)\n}\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const getTypersInChannel = (channelId: string) => createSelector(\n  state => state.entities.typing,\n  typing => typing.filter(t => t.channelId === channelId),\n);\n\nlet lastTypedAt: Date;\n\nexport const startTyping = (channelId: string) => (dispatch, getState: () => Store.AppState) => {\n  const secsAgo = moment(new Date()).diff(lastTypedAt, 'seconds');\n  if (lastTypedAt && secsAgo < 5) return;\n\n  lastTypedAt = new Date();\n\n  dispatch(api.wsCallBegan({\n    event: 'TYPING_START',\n    data: { channelId },\n  }));\n}","import ws from './ws-service';\n\nlet timeout: NodeJS.Timeout;\nlet beforeSendMs: number;\nlet mediaStream: MediaStream;\nlet recorder: MediaRecorder;\nlet audioChunks: Blob[] = [];\nlet channelId: string;\n\n// start feedback cycle w/ server and client (EMIT voice_data via client when in vc)\n// - as soon as we are in a vc, we send updates\n// - (Client) EMIT VOICE_DATA -> (Server) EMIT VOICE_DATA\n//                    ^______________|\nexport async function startVoiceFeedback(currentChannelId: string) {\n  channelId = currentChannelId;\n  const wsPing = new Date().getTime() - beforeSendMs;\n  console.log('start feedback', wsPing);  \n\n  if (!mediaStream && !recorder)\n    await startMedia();\n  if (!recorder.onstop)\n    recorder.onstop = onStop;\n  \n  // we start recording as soon as join a vc\n  // - 100ms later, we send it to the server\n  // - server sends audio and is played on client\n  // - gap between server and client (6ms)?\n  if (recorder.state !== 'recording')\n    recorder.start();\n  // it's waits for a response which takes 100ms, creating a hole in audio\n  timeout = setTimeout(() => (recorder.state === 'recording') && recorder.stop(), 300);\n}\n\nexport const stopVoiceFeedback = () => {\n  console.log('stopping feedback');  \n\n  clearTimeout(timeout);\n  if (recorder && recorder.state === 'recording') {\n    recorder.onstop = null;\n    recorder.stop();\n  }\n}\n\nws.on('VOICE_DATA', async ({ channelId, connections }) => {\n  console.log('receive VOICE_DATA');\n  if (!channelId) return;\n  \n  // we play audio as soon as it's available\n  for (const { blob: arrayBuffer, userId } of connections) {\n    document.querySelector(`#voice${userId}`)?.remove();\n\n    const blob = new Blob([arrayBuffer], { 'type' : 'audio/ogg; codecs=opus' });\n    const audio = document.createElement('audio');\n    audio.id = `voice${userId}`;\n    audio.src = window.URL.createObjectURL(blob);\n    audio.play();\n  }\n  startVoiceFeedback(channelId);\n});\n\nasync function startMedia() {\n  mediaStream = await navigator.mediaDevices.getUserMedia({ audio: true });\n  recorder = new MediaRecorder(mediaStream);\n  recorder.onstart = () => audioChunks = [];\n  recorder.ondataavailable = (e) => audioChunks.push(e.data);\n  recorder.onstop = onStop;\n}\n\nasync function onStop() {\n  console.log('stop recording');\n  \n  beforeSendMs = new Date().getTime();\n  const blob = new Blob(audioChunks, { 'type': 'audio/ogg; codecs=opus' });\n  ws.emit('VOICE_DATA', { channelId, blob });\n  recorder.onstop = onStop;\n}","import { createSlice, createSelector } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api, uploadFile } from './api';\nimport { notInArray } from './utils/filter';\nimport { headers } from './utils/rest-headers';\n\nconst slice = createSlice({\n  name: 'messages',\n  initialState: {\n    total: {},\n    list: [],\n  } as Store.AppState['entities']['messages'],\n  reducers: {\n    fetched: ({ list, total }, { payload }: Store.Action<REST.From.Get['/channels/:channelId/messages']>) => {\n      list.unshift(...payload.list.filter(notInArray(list)));\n      total[payload.channelId] = payload.total;\n    },\n    created: ({ list, total }, { payload }: Store.Action<WS.Args.MessageCreate>) => {\n      list.push(payload.message);\n      total[payload.message.channelId]++;\n    },\n    deleted: ({ list, total }, { payload }: Store.Action<WS.Args.MessageDelete>) => {\n      const index = list.findIndex(m => m.id === payload.messageId);\n      list.splice(index, 1);\n      total[payload.channelId]--;\n    },\n    updated: ({ list }, { payload }: Store.Action<WS.Args.MessageUpdate>) => {\n      const message = list.find(m => m.id === payload.message.id);\n      Object.assign(message, payload.message);\n    },\n  },\n});\n\nexport const getChannelMessages = (channelId: string) => createSelector(\n  state => state.entities.messages.list,\n  messages => messages.filter(m => m.channelId === channelId),\n);\n\nexport const fetchMessages = (channelId: string, back = 25) => (dispatch, getState: () => Store.AppState) => {\n  const { messages } = getState().entities;\n  if (messages.list.length === messages.total[channelId]) return;\n\n  dispatch(api.restCallBegan({\n    onSuccess: [actions.fetched.type],\n    url: `/channels/${channelId}/messages?back=${back}`,\n    headers: headers(),\n  }));\n}\n\nexport const createMessage = (channelId: string, payload: Partial<Entity.Message>, attachmentURLs?: string[]) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'MESSAGE_CREATE',\n    data: { ...payload, channelId, attachmentURLs } as WS.Params.MessageCreate,\n  }));\n}\n\n// each file is uploaded individually as a separate API call\nexport const uploadFileAsMessage = (channelId: string, payload: Partial<Entity.Message>, file: File) => (dispatch) => {\n  const uploadCallback = async ({ url }: REST.From.Post['/upload']) =>\n    dispatch(createMessage(channelId, payload, [url]));\n  dispatch(uploadFile(file, uploadCallback));\n}\n\nexport const updateMessage = (id: string, payload: Partial<Entity.Message>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'MESSAGE_UPDATE',\n    data: { messageId: id, ...payload },\n  }));\n}\n\nexport const deleteMessage = (id: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'MESSAGE_DELETE',\n    data: { messageId: id },\n  }));\n}\n\nexport const actions = slice.actions;\nexport default slice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\ntype PingPayload = { channelId: string, guildId: string };\ntype Pings = { [guildId: string]: string[] };\n\nconst slice = createSlice({\n  name: 'pings',\n  initialState: {} as Pings,\n  reducers: {\n    initialized: (pings, { payload }: Store.Action<Pings>) => {\n      Object.assign(pings, payload);\n    },\n    added: (pings, { payload }: Store.Action<PingPayload>) => {\n      pings[payload.guildId].push(payload.channelId);\n    },\n    channelMarkedAsRead: (pings, { payload }: Store.Action<PingPayload>) => {\n      const guildPings = pings[payload.guildId];\n      const index = guildPings.indexOf(payload.channelId);\n      guildPings.splice(index, 1);\n    },\n    guildMarkedAsRead: (pings, { payload }: Store.Action<PingPayload>) => {\n      pings[payload.guildId] = [];\n    },\n  },\n})\n\nexport const actions = slice.actions;\nexport default slice.reducer; \n\nexport const initPings = () => (dispatch, getState: () => Store.AppState) => {\n  const user = getState().auth.user!;\n  const channels = getState().entities.channels;\n  const pings: Pings = {};\n\n  for (const channel of channels) {\n    const lastReadId = user.lastReadMessageIds[channel.id];\n    if (true || lastReadId === channel.lastMessageId) {\n      pings[channel.id] = pings[channel.id] ?? [];\n      pings[channel.id].push(channel.id);\n    }\n  }\n  dispatch(actions.initialized(pings));\n}\n\nexport const addPing = (channelId: string) => (dispatch, getState: () => Store.AppState) => {\n  const guildId = getState().entities.channels\n    .find(c => c.id === channelId)!.guildId;\n  dispatch(actions.added({ channelId, guildId }));\n}","import { actions as api } from '../api';\nimport { actions as channelActions } from '../channels';\nimport { actions as guildActions } from '../guilds';\nimport { actions as memberActions } from '../members';\nimport { actions as meta } from '../meta';\nimport { actions as roleActions } from '../roles';\nimport { actions as userActions } from '../users';\nimport { headers } from '../utils/rest-headers';\n\nexport default () => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    headers: headers(),\n    url: `/users/entities`,\n    callback: (data: REST.From.Get['/users/entities']) => {\n      dispatch(channelActions.fetched(data.channels));\n      dispatch(guildActions.fetched(data.guilds));\n      dispatch(memberActions.fetched(data.members));\n      dispatch(roleActions.fetched(data.roles));\n      dispatch(userActions.fetched(data.users));\n      dispatch(meta.fetchedEntities());\n    },\n  }));  \n}","import { useDispatch, useSelector, useStore } from 'react-redux';\nimport ws from '../services/ws-service';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { actions as users, getUser } from '../store/users';\nimport { actions as meta } from '../store/meta';\nimport { actions as uiActions, Dialog, openUserProfile } from '../store/ui';\nimport { actions as invites } from '../store/invites';\nimport { actions as members, getSelfMember } from '../store/members';\nimport { actions as roles } from '../store/roles';\nimport { actions as typing } from '../store/typing';\nimport { actions as guilds } from '../store/guilds';\nimport { actions as messages } from '../store/messages';\nimport { actions as channels } from '../store/channels';\nimport { actions as auth, logoutUser } from '../store/auth';\nimport { actions as pings, addPing } from '../store/pings';\nimport { useSnackbar } from 'notistack';\nimport events from '../services/event-service';\nimport { startVoiceFeedback, stopVoiceFeedback } from '../services/voice-service';\nimport fetchEntities from '../store/actions/fetch-entities';\n\nconst WSListener: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const store = useStore();\n  const hasListened = useSelector((s: Store.AppState) => s.meta.hasListenedToWS);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const state = () => store.getState() as Store.AppState;\n\n  // TODO: make alphabetical order\n  useEffect(() => {\n    if (hasListened) return;    \n\n    const handleDialog = (dialog: Dialog) =>    \n      enqueueSnackbar(`${dialog.content}.`, {\n        anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n        variant: dialog.variant,\n        autoHideDuration: 5000,\n      });\n    \n    ws.on('error', (error: any) => handleDialog({\n      variant: 'error',\n      content: error.data?.message ?? error.message,\n    }));\n    events.on('dialog', handleDialog);\n    events.on('openUserProfile', (userId: string) => {\n      const user = getUser(userId)(store.getState());\n      if (!user.discriminator) return;\n\n      dispatch(openUserProfile(user));\n    });\n\n    // add channel to guilds.channels\n    ws.on('CHANNEL_CREATE', (args) => {\n      // if we created it, we want to navigate there\n      // we'd expect the user to exist, as they should be logged in to receive ws events\n      const { auth, ui } = state();      \n      const selfCreated = args.creatorId === auth.user!.id;\n      \n      // we cannot go to the channel if not in store \n      dispatch(channels.created(args));\n\n      if (selfCreated && ui.activeGuild) {\n        dispatch(uiActions.closedModal());\n        if (args.channel.type === 'VOICE') return;\n\n        history.push(`/channels/${ui.activeGuild.id}/${args.channel.id}`);\n      }\n    });\n    ws.on('CHANNEL_DELETE', (args) => {\n      // if in channel, go away from it\n      const { ui } = state();\n      const inChannel = args.channelId === ui.activeChannel?.id;\n\n      if (inChannel && ui.activeGuild)\n        history.push(`/channels/${ui.activeGuild.id}`);\n\n      dispatch(channels.deleted(args));\n    });\n    ws.on('CHANNEL_UPDATE', (args) => dispatch(channels.updated(args)));\n    ws.on('GUILD_CREATE', (args) => {\n      dispatch(users.fetched(args.users)); // this before members\n      dispatch(channels.fetched(args.channels));\n      dispatch(members.fetched(args.members));\n      dispatch(roles.fetched(args.roles)); // this after members\n      dispatch(guilds.created(args));\n      dispatch(uiActions.closedModal());\n      history.push(`/channels/${args.guild.id}`);\n    });\n    ws.on('GUILD_DELETE', (args) => {\n      const { ui } = state();\n      const guildIsActive = args.guildId === ui.activeGuild?.id;\n      if (guildIsActive) {\n        dispatch(uiActions.closedModal());\n        history.push('/channels/@me');\n      }\n      dispatch(guilds.deleted(args));\n      // clean up leaving guild mess\n      const memberId = getSelfMember(args.guildId)(state())!.id;\n      dispatch(members.removed({ memberId }));\n    });\n    // listen to passive events (not received by api middleware)\n    ws.on('GUILD_MEMBER_ADD', (args) => {\n      // we not getting other users when joining guild\n      dispatch(users.fetched([args.user]));\n      dispatch(members.added(args));      \n    });\n    ws.on('GUILD_MEMBER_UPDATE', (args) => dispatch(members.updated(args)));\n    // user may be in mutual guilds, and therefore not removed from global user cache\n    ws.on('GUILD_MEMBER_REMOVE', (args) => dispatch(members.removed(args)));\n    ws.on('GUILD_ROLE_CREATE', (args) => dispatch(roles.created(args)));\n    ws.on('GUILD_ROLE_DELETE', (args) => dispatch(roles.deleted(args)));\n    ws.on('GUILD_ROLE_UPDATE', (args) => dispatch(roles.updated(args)));\n    ws.on('GUILD_UPDATE', (args) => dispatch(guilds.updated(args)));\n    ws.on('INVITE_CREATE', (args) => {\n      dispatch(invites.created(args));\n      dispatch(uiActions.focusedInvite(args.invite));\n    });\n    ws.on('INVITE_DELETE', (args) => dispatch(invites.deleted(args)));\n    ws.on('MESSAGE_CREATE', (args) => {\n      const selfUser = state().auth.user!;\n      const isBlocked = selfUser.ignored?.userIds.includes(args.message.authorId);\n      if (isBlocked) return;\n\n      dispatch(messages.created(args));\n      \n      const { channelId } = args.message;\n      const { activeChannel } = state().ui;\n      if (activeChannel && activeChannel.id !== channelId)\n        addPing(channelId);\n    });\n    ws.on('MESSAGE_DELETE', (args) => dispatch(messages.deleted(args)));\n    ws.on('MESSAGE_UPDATE', (args) => dispatch(messages.updated(args)));\n    ws.on('PRESENCE_UPDATE', ({ userId, status }) =>\n      dispatch(users.updated({ userId, partialUser: { status } })));\n    ws.on('READY', (args) => {\n      dispatch(fetchEntities());\n      dispatch(auth.ready(args));\n      dispatch(users.fetched([args.user]));\n    });\n    ws.on('TYPING_START', (args) => {\n      dispatch(typing.userTyped(args));\n\n      const timeoutMs = 5000;\n      setTimeout(() => dispatch(typing.userStoppedTyping(args)), timeoutMs);\n    });\n    ws.on('USER_DELETE', () => {\n      ws.disconnect();\n      history.push('/');\n      dispatch(logoutUser());\n    });\n    ws.on('USER_UPDATE', (args) => {      \n      dispatch(auth.updatedUser(args));\n      dispatch(users.updated(args));\n    });\n    ws.on('VOICE_STATE_UPDATE', async ({ userId, voice }) => {\n      const data = { userId, partialUser: { voice } };\n      const selfUser = state().auth.user!;\n      if (selfUser.id === userId)\n        dispatch(auth.updatedUser(data));\n      dispatch(users.updated(data));\n\n      (voice.channelId)\n        // if in channel\n        ? await startVoiceFeedback(voice.channelId)\n        : stopVoiceFeedback();\n    });\n\n    dispatch(meta.listenedToWS());\n  }, [hasListened]);\n  \n  return null;\n}\n \nexport default WSListener;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions as ui } from '../../store/ui';\nimport ChannelSettings from '../modals/channel-settings/channel-settings';\nimport CreateChannel from '../modals/create-channel';\nimport CreateGuild from '../modals/create-guild';\nimport CreateInvite from '../modals/create-invite';\nimport GuildSettings from '../modals/guild-settings/guild-settings';\nimport ImagePreview from '../modals/image-preview';\nimport UserProfile from '../modals/user-profile';\nimport UserSettings from '../modals/user-settings/user-settings';\nimport { filterProps } from '../utils/react/react-shush-error';\nimport WSListener from '../ws-listener';\n\nexport type PageWrapperProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement> & { pageTitle?: string; };\n\n// all separate pages should be wrapped by this\nconst PageWrapper: React.FunctionComponent<PageWrapperProps> = (props) => {\n  const dispatch = useDispatch();\n  const dropdown = useSelector((s: Store.AppState) => s.ui.openDropdown);\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n  \n  useEffect(() => {\n    document.title = props.pageTitle ?? 'accord.app';\n  }, []);\n\n  const onClick = () => dropdown && dispatch(ui.toggleDropdown({}));\n\n  if (!devMode) {\n    console.log(`%cAttention!`, `color: red; font-size: 32px; font-weight: 900;`);\n    console.log(\n      `%cIf someone told you to paste something in this console, it's probably against the TOS and could steal your account.`,\n      `color: darkred; font-size: 16px; font-weight: 700;`\n    );\n  }\n\n  return (\n    <div onClick={onClick}\n      {...filterProps(props)}>\n      {props.children}\n      <WSListener />\n      {/* modals */}\n      <CreateChannel />\n      <CreateGuild />\n      <CreateInvite />\n      <ChannelSettings />\n      <GuildSettings />\n      <ImagePreview />\n      <UserSettings />\n      <UserProfile />\n    </div>\n  );\n}\n \nexport default PageWrapper;","export default __webpack_public_path__ + \"static/media/chat.304c50bf.svg\";","export default __webpack_public_path__ + \"static/media/devices.99f78ca4.svg\";","export default __webpack_public_path__ + \"static/media/friends.547620e1.svg\";","export default __webpack_public_path__ + \"static/media/secure.7370ac46.svg\";","import './home-page.scoped.css';\n\nimport { Link } from 'react-router-dom';\nimport Navbar from '../navigation/navbar';\nimport PageWrapper from './page-wrapper';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Chat from '../../assets/home/chat.svg';\nimport Devices from '../../assets/home/devices.svg';\nimport Friends from '../../assets/home/friends.svg';\nimport Secure from '../../assets/home/secure.svg';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { countUsers } from '../../store/users';\nimport NumberFormat from 'react-number-format';\n\nconst HomePage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const userCount = useSelector((s: Store.AppState) => s.meta.userCount);\n  \n  useEffect(() => { dispatch(countUsers()) }, []);\n\n  const ImageCard = (props: { title: string, src: any }) => (\n    <div>\n      <h3 className=\"text-center text-1xl font-black font mb-4\">{props.title}</h3>\n      <img className=\"w-44 inline\" src={props.src} alt=\"Chat\" />\n    </div>\n  );\n\n  let keys: string[] = [];\n  document.addEventListener('keyup', (e) => {\n    keys.push(e.key);\n    if (!keys.join('').endsWith('testing123')) return;\n\n    try {\n      document.querySelector('h1')!.textContent = 'Easteregg++';\n      document.querySelector('.lead')!.textContent = 'Are you happy now?';\n    } catch {}\n  });\n\n  return (\n    <PageWrapper\n      className=\"z-10 bg-bg-tertiary h-full relative\"\n      pageTitle=\"accord.app | Like Discord but Cooler\">\n      <Navbar />\n      <section className=\"z-10 text-center my-4\">\n        <h1>It's time to ditch Discord and Zoom.</h1>\n        <div className=\"flex justify-center\">\n          <div className=\"lead font-light mt-2 max-w-xl\">\n            All-in-one text and voice chat, just like Discord.\n            Stop paying for Discord boosts and hassling with Zoom. \n            {Boolean(userCount) && (\n              <span className=\"pl-1\">\n                Join <NumberFormat\n                value={userCount}\n                displayType={'text'}\n                thousandSeparator={true}/> Accord users that simplified their life.\n              </span>\n            )}\n          </div>\n        </div>\n        <button className=\"font-primary shadow-md bg-green text-dark\">\n          <Link to=\"/login\" >\n            <NormalButton className=\"bg-white text-black rounded w-56 h-11 px-6 mt-8\">Login</NormalButton>\n          </Link>\n        </button>\n        <button className=\"shadow-md bg-green text-dark ml-10\">\n          <Link to=\"/channels/@me\">\n            <NormalButton className=\"text-black bg-success rounded W-56 h-11 px-6 mt-8\">Open Accord in Your Browser</NormalButton>\n          </Link>\n        </button>\n      </section>\n\n      <section\n        title=\"*Description may represent unreleased features.*\"\n        className=\"absolute top-50 w-1/2 inset-x-1/4 flex justify-between\">\n        <ImageCard src={Chat} title=\"Chat w/ Friends\" />\n        <ImageCard src={Devices} title=\"On Mobile or Desktop\" />\n        <ImageCard src={Friends} title=\"Join and Manage Guilds\" />\n        <ImageCard src={Secure} title=\"Super Secure\" />\n      </section>\n\n      <footer className=\"fixed bottom-0 w-full\">\n        {process.env.REACT_APP_VERSION && (\n          <a className=\"float-right normal mr-2\"\n            href={`${process.env.REACT_APP_REPO}/commit/${process.env.REACT_APP_VERSION}`}\n            target=\"_blank\">v{process.env.REACT_APP_VERSION.slice(0, 7)}</a>\n        )}\n      </footer>\n    </PageWrapper>\n  );\n}\n\nexport default HomePage;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHashtag, faUserFriends } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleMemberList } from '../../store/config';\nimport classNames from 'classnames';\n \nconst AppNavbar: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel);\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild);\n  const memberListToggled = useSelector((s: Store.AppState) => s.config.memberListToggled);\n\n  return (\n    <div className=\"shadow-elevation flex items-center h-12 px-5\">\n      {channel && <FontAwesomeIcon\n        icon={faHashtag}\n        className=\"scale-150 mr-2\" />}\n      <h3 className=\"flex-grow ml-1\">\n        <span className=\"font-bold\">{channel?.name}</span>\n        <span className=\"muted ml-3\">{channel?.summary}</span>\n      </h3>\n      {guild && (\n        <FontAwesomeIcon\n          onClick={() => dispatch(toggleMemberList())}\n          icon={faUserFriends}\n          className={classNames(`cursor-pointer`, {\n            'heading': memberListToggled,\n            'muted': !memberListToggled,\n          })} />)}\n    </div>\n  );\n}\n \nexport default AppNavbar;","import Username from '../../user/username';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faPhoneSlash, faSignal } from '@fortawesome/free-solid-svg-icons';\nimport { actions as ui } from '../../../store/ui';\nimport { getChannel, leaveVoiceChannel } from '../../../store/channels';\nimport { getGuild } from '../../../store/guilds';\nimport classNames from 'classnames';\nimport { useEffect } from 'react';\n \nconst SidebarFooter: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((s: Store.AppState) => s.auth.user)!;\n\n  const VoiceFooter = () => {\n    const channelId = user.voice?.channelId;\n    const channel = useSelector(getChannel(channelId ?? ''));\n    const guild = useSelector(getGuild(channel?.guildId ?? ''));\n    const ping = useSelector((s: Store.AppState) => s.meta.ping);\n\n    if (!channel || !guild) return null;\n    \n    return (\n      <div id=\"sidebarFooter\">\n        <div className=\"justify-between flex items-center p-3 pr-4\">\n          <div title={ping ? `Ping ${ping}ms` : 'Pinging server...'}>\n            <FontAwesomeIcon\n              icon={faSignal}\n              className={classNames({\n                'success': ping && ping < 100,\n                'secondary': ping && ping >= 100 && ping < 200,\n                'warning': ping && ping >= 200 && ping < 300,\n                'danger': ping && ping >= 300,\n                'muted': !ping,\n              })} />\n            <strong className=\"success ml-2\">Voice Connected</strong>\n            <div className=\"normal\">{channel.name} / {guild.name}</div>\n          </div>\n          <FontAwesomeIcon\n            onClick={() => dispatch(leaveVoiceChannel())}\n            className=\"float-right cursor-pointer\"\n            icon={faPhoneSlash} />\n        </div>\n        <hr className=\"border-bg-primary\" />\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"bg-bg-secondary-alt\">\n      <VoiceFooter />\n      <div className=\"relative flex items-center py-2\">\n        <div className=\"select-all\">\n          <Username user={user} />\n        </div>\n        <FontAwesomeIcon\n          id=\"userSettingsButton\"\n          onClick={() => dispatch(ui.openedModal('UserSettings'))}\n          className=\"float-right cursor-pointer absolute right-4\"\n          icon={faCog} />\n      </div>\n    </div>\n  );\n}\n \nexport default SidebarFooter;","import { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSelector } from 'react-redux';\n\nexport interface DropdownProps {\n  title: string;\n  type: React.FunctionComponent;\n}\n\nconst Dropdown: React.FunctionComponent<DropdownProps> = (props) => {\n  const dropdown = useSelector((s: Store.AppState) => s.ui.openDropdown);\n\n  return (\n    <div className=\"w-full pt-3\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"flex-grow font-bold pl-2\">{props.title}</h1>\n        <FontAwesomeIcon icon={faChevronDown} />\n      </div>\n      {\n        (dropdown === props.type.name) && \n        <div className=\"absolute bg-bg-floating rounded w-56 p-2 mt-5\">\n          {props.children}\n        </div>\n      }\n    </div>\n  );\n}\n \nexport default Dropdown;","import { faUserPlus, faPlusCircle, faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useDispatch, useSelector } from 'react-redux';\nimport usePerms from '../../hooks/use-perms';\nimport { actions as ui } from '../../store/ui';\nimport CreateChannel from '../modals/create-channel';\nimport CreateInvite from '../modals/create-invite';\nimport GuildSettings from '../modals/guild-settings/guild-settings';\nimport Dropdown from '../utils/dropdown';\n\nconst GuildDropdown: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const perms = usePerms();\n\n  if (!guild) return null;\n\n  return (\n    <Dropdown\n      title={guild.name}\n      type={GuildDropdown}>\n      {perms.can('CREATE_INVITE', guild.id) && (\n        <a className=\"rounded-sm flex items-center justify-between text-sm p-2 h-8 mb-1\"\n          onClick={() => dispatch(ui.openedModal('CreateInvite'))}>\n          <span className=\"primary\">Invite people</span>\n          <FontAwesomeIcon\n            className=\"float-right w-1\"\n            icon={faUserPlus} />\n        </a>\n      )}\n      {perms.can('MANAGE_CHANNELS', guild.id) && (\n        <a className=\"rounded-sm flex items-center justify-between p-2 h-8 text-sm mb-1\"\n          onClick={() => dispatch(ui.openedModal('CreateChannel'))}>\n          <span className=\"font\">Create channel</span>\n          <FontAwesomeIcon\n            className=\"float-right w-1\"\n            icon={faPlusCircle} />\n        </a>\n      )}\n      {(perms.can('MANAGE_GUILD', guild.id)\n        || perms.can('MANAGE_ROLES', guild.id)\n        || perms.can('MANAGE_INVITES', guild.id)) && (\n        <a onClick={() => dispatch(ui.openedModal('GuildSettings'))}\n          className=\"rounded-sm flex items-center justify-between p-2 h-8 text-sm\">\n          <span className=\"font\">Guild settings</span>\n          <FontAwesomeIcon\n            className=\"float-right w-1\"\n            icon={faCog} />\n        </a>\n      )}\n    </Dropdown>\n  );\n}\n\nexport default GuildDropdown;","import { faCross, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport usePerms from '../../hooks/use-perms';\nimport { deleteChannel } from '../../store/channels';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface ChannelMenusProps {\n  channel: Entity.Channel;\n}\n \nconst ChannelMenu: React.FunctionComponent<ChannelMenusProps> = ({ channel }) => {\n  const dispatch = useDispatch();\n  const { guildId }: any = useParams();\n  const perms = usePerms();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (guildId) ? (\n    <ContextMenu\n      key={channel.id}\n      id={channel.id}\n      className=\"bg-bg-tertiary rounded shadow w-52 p-2\">\n      {perms.can('MANAGE_CHANNELS', guildId) && (\n        <MenuItem\n          className=\"danger cursor-pointer\"\n          onClick={() => dispatch(deleteChannel(channel.id))}>\n          <span>Delete channel</span>\n          <FontAwesomeIcon icon={faTimes} className=\"float-right\" />\n        </MenuItem>\n      )}\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Channel ID', id: channel.id },\n      ]} />}\n    </ContextMenu>\n  ) : null;\n}\n \nexport default ChannelMenu;","import './channel-tabs.scoped.css';\nimport { faHashtag, faVolumeUp, faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport usePerms from '../../../hooks/use-perms';\nimport { getChannelUsers, joinVoiceChannel } from '../../../store/channels';\nimport { getGuild, getGuildChannels } from '../../../store/guilds';\nimport { actions as ui } from '../../../store/ui';\nimport ChannelMenu from '../../ctx-menus/channel-menu';\nimport Username from '../../user/username';\nimport Draggable from 'react-draggable';\nimport React from 'react';\n\nconst ChannelTabs: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { activeGuild, activeChannel } = useSelector((s: Store.AppState) => s.ui);\n  const guildChannels = useSelector(getGuildChannels(activeGuild?.id));\n  const perms = usePerms();\n\n  if (!activeGuild || !perms.can('VIEW_CHANNELS', activeGuild.id)) return null;\n\n  const ChannelTab = ({ channel }: { channel: Entity.Channel }) => {\n    const link = (channel.type === 'VOICE')\n      ? '#'\n      : `/channels/${activeGuild!.id}/${channel.id}`;\n    const icon = { 'TEXT': faHashtag, 'VOICE': faVolumeUp }[channel.type];\n\n    const onClick = () => {\n      if (channel.type !== 'VOICE') return;\n      \n      dispatch(joinVoiceChannel(channel.id));\n    };\n\n    const VCMembers: React.FunctionComponent = () => {\n      const users = useSelector(getChannelUsers(channel.id));\n      if (channel.type !== 'VOICE' || !users.length) return null;\n\n      return <div className=\"p-2 pl-3\">{users.map(u =>\n        <ContextMenuTrigger key={u.id} id={u.id}>\n          <div className=\"mb-1\">\n            <Username user={u} size=\"sm\" guild={activeGuild} />\n          </div>\n        </ContextMenuTrigger>\n      )}</div>;\n    };\n\n    const ChannelTabContent: React.FunctionComponent = () => (\n      <span className=\"tab flex-grow flex justify-between\">\n        <span>{channel.name}</span>\n        <span\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            \n            dispatch(ui.pageSwitched({ channel, guild: activeGuild }));\n            dispatch(ui.openedModal('ChannelSettings'));\n          }}\n          className=\"cursor-pointer opacity-100\">\n          {perms.can('MANAGE_CHANNELS', activeGuild.id)\n            && <FontAwesomeIcon className=\"settings\" icon={faCog} />}\n        </span>\n      </span>\n    );\n\n    return (\n      <>\n        <ContextMenuTrigger key={channel.id} id={channel.id}>\n          {/* <Draggable> */}\n            <Link\n              onClick={onClick}\n              to={link}\n              className={classNames(\n                `cursor-pointer flex items-center rounded h-8 p-2 pl-3`,\n                { active: channel.id === activeChannel?.id },\n              )}>\n              <FontAwesomeIcon\n                className={classNames(\n                  `float-left scale-150 muted fill-current`,\n                  (channel.type === 'VOICE') ? 'mr-2' : 'mr-3',\n                )}\n                icon={icon} />\n              <ChannelTabContent />\n              <ChannelMenu channel={channel} />\n            </Link>\n          {/* </Draggable> */}\n        </ContextMenuTrigger>\n        <VCMembers />\n      </>\n    );\n  }\n\n  return (\n    <div className=\"channel-tabs\">\n      {guildChannels.map(c => <ChannelTab key={c.id} channel={c} />)}\n    </div>\n  );\n};\nexport default ChannelTabs;","import SidebarFooter from './sidebar-footer';\nimport { useDispatch } from 'react-redux';\nimport { actions as ui } from '../../../store/ui';\nimport GuildDropdown from '../../dropdowns/guild-dropdown';\nimport ChannelTabs from './channel-tabs';\n\nconst SidebarContent: React.FunctionComponent = () => {  \n  const dispatch = useDispatch();\n  return (\n    <div className=\"flex flex-col bg-bg-secondary w-60\">\n      <div\n        id=\"sidebarHeader\"\n        className=\"items-center shadow-elevation cursor-pointer h-12 pl-2.5 pr-4\"\n        onClick={() => dispatch(ui.toggleDropdown(GuildDropdown))}>\n        <GuildDropdown />\n      </div>\n      <nav className=\"sidebar-tabs flex-grow px-2 pt-4\">\n        <ChannelTabs />\n      </nav>\n      <SidebarFooter />\n    </div>\n  );\n}\n \nexport default SidebarContent;","import { faDoorOpen } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { leaveGuild } from '../../store/members';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface GuildMenuProps {\n  guild: Entity.Guild;\n}\n\nconst GuildMenu: React.FunctionComponent<GuildMenuProps> = ({ guild }) => {\n  const dispatch = useDispatch();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (\n    <ContextMenu\n      key={guild.id}\n      id={guild.id}\n      className=\"bg-bg-tertiary rounded shadow w-48 p-2\">\n      <MenuItem\n        className=\"flex items-center justify-between danger cursor-pointer\"\n        onClick={() => dispatch(leaveGuild(guild.id))}>\n        <span>Leave Guild</span>\n        <FontAwesomeIcon icon={faDoorOpen} />\n      </MenuItem>\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Guild ID', id: guild.id },\n      ]} />}\n    </ContextMenu>\n  );\n}\n \nexport default GuildMenu;","import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { actions as ui } from '../../../store/ui';\nimport SidebarIcon from './sidebar-icon';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport GuildMenu from '../../ctx-menus/guild-menu';\n \nconst SidebarIcons: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((s: Store.AppState) => s.auth.user)!;  \n  const guilds = useSelector((s: Store.AppState) => s.entities.guilds)!;\n\n  const guildIcons = guilds.map(g => (\n    <ContextMenuTrigger key={g.id} id={g.id}>\n      <Link to={`/channels/${g.id}`}>\n        <SidebarIcon\n          to={`/channels/${g.id}`}\n          imageURL={g.iconURL}\n          name={g.name} />\n      </Link>\n\n      <GuildMenu guild={g} />\n    </ContextMenuTrigger>\n  ));\n\n  const PlusIcon = () => (\n    <div\n      id=\"createGuildButton\"\n      onClick={() => dispatch(ui.openedModal('CreateGuild'))}\n      className=\"success text-3xl\">\n      <SidebarIcon name=\"+\" classes=\"success\" />\n    </div>\n  );\n  \n  return (\n    <div className=\"overflow-auto min-h-screen float-left p-3 flex flex-col bg-bg-tertiary\">\n      <Link to=\"/channels/@me\">\n        <SidebarIcon\n          to=\"/channels/@me\"\n          imageURL={user.avatarURL}\n          name={user.username} />\n      </Link>\n      <div className=\"flex justify-center mb-1\">\n        <div className=\"h-0.5 w-8 rounded-sm bg-bg-modifier-accent mb-1\" />\n      </div>\n      {guildIcons}\n      <PlusIcon />\n    </div>\n  );\n}\n \nexport default SidebarIcons;","import SidebarContent from './sidebar-content';\nimport SidebarIcons from './sidebar-icons';\n \nconst Sidebar: React.FunctionComponent = (props) => {\n  \n  return (\n    <div className=\"sidebar flex float-left\">\n      <SidebarIcons />\n      <SidebarContent />\n    </div>\n  );\n}\n \nexport default Sidebar;\n","import { faPencilAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useDispatch, useSelector } from 'react-redux';\nimport usePerms from '../../../hooks/use-perms';\nimport { deleteMessage } from '../../../store/messages';\nimport { actions as ui } from '../../../store/ui';\n\nexport interface MessageToolbarProps {\n  message: Entity.Message;\n}\n \nconst MessageToolbar: React.FunctionComponent<MessageToolbarProps> = ({ message }) => {\n  const dispatch = useDispatch();\n  const selfUser = useSelector((s: Store.AppState) => s.auth.user)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const openModal = useSelector((s: Store.AppState) => s.ui.openModal);\n  const perms = usePerms();\n\n  const isAuthor = message.authorId === selfUser.id;\n  const canManage = perms.canInChannel('MANAGE_MESSAGES', guild.id, message.channelId)\n    || guild?.ownerId === selfUser.id\n    || isAuthor;\n  \n  return (!openModal) ? (\n    <div className=\"float-right shadow bg-bg-secondary px-2 rounded cursor-pointer\">\n      {isAuthor && (\n        <div className=\"inline\">\n          <FontAwesomeIcon\n            onClick={() => dispatch(ui.startedEditingMessage(message.id))}\n            className=\"mr-2\"\n            icon={faPencilAlt} />\n        </div>\n      )}\n      {canManage && (\n        <div className=\"inline\">\n          <FontAwesomeIcon\n          onClick={() => dispatch(deleteMessage(message.id))}\n          className=\"danger\"\n          icon={faTimes} />\n        </div>\n      )}\n    </div>\n  ) : null;\n}\n \nexport default MessageToolbar;","import { ContextMenu } from 'react-contextmenu';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface MessageMenuProps {\n  message: Entity.Message;\n}\n \nconst MessageMenu: React.FunctionComponent<MessageMenuProps> = ({ message }) => {\n  const { guildId }: any = useParams();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (guildId) ? (\n    <ContextMenu\n      key={message.id}\n      id={message.id}\n      className=\"bg-bg-tertiary rounded shadow w-48 p-2\">\n      <div className=\"overflow-hidden\">\n        <span className=\"bg-bg-primary p-1 rounded max-w-full\">{message.content}</span>\n      </div>\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Message ID', id: message.id },\n      ]} />}\n    </ContextMenu>\n  ) : null;\n}\n \nexport default MessageMenu;","import classNames from 'classnames';\nimport { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport striptags from 'striptags';\nimport useFormat from '../../../hooks/use-format';\nimport useMentions from '../../../hooks/use-mentions';\nimport usePerms from '../../../hooks/use-perms';\nimport { startTyping } from '../../../store/typing';\nimport { actions as ui } from '../../../store/ui';\n\ninterface MessageBoxInputProps {\n  contentState: [any, any];\n  saveEdit: () => any;\n}\n \nconst MessageBoxInput: React.FunctionComponent<MessageBoxInputProps> = (props) => {\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const dispatch = useDispatch();\n  const editingMessageId = useSelector((s: Store.AppState) => s.ui.editingMessageId);\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const perms = usePerms();\n  const messageBoxRef = useRef<HTMLDivElement>(null);\n  const [content, setContent] = props.contentState;\n\n  const onKeyUp = (event: React.KeyboardEvent<HTMLDivElement>) => {    \n    setContent(event.currentTarget!.innerText);\n\n    handleEscape(event);\n    dispatch(startTyping(channel.id));\n    \n    if (event.key === 'Enter' && !event.shiftKey)\n      event.preventDefault();\n\n    const emptyMessage = content.replaceAll('\\n', '');\n    if (event.key !== 'Enter'\n      || event.shiftKey\n      || !emptyMessage) return;\n    \n    props.saveEdit();\n\n    setContent('');\n    messageBoxRef.current!.innerText = '';\n  }\n  const handleEscape = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.key !== 'Escape') return;\n    if (editingMessageId)\n      dispatch(ui.stoppedEditingMessage());\n  }\n  \n  const canSend = perms.canInChannel('SEND_MESSAGES', guild.id, channel.id);\n  const getPlaceholder = (): string | undefined => {\n    if (!canSend) return `Insufficient perms.`;\n    if (!editingMessageId) return `Message #${channel.name}`;\n  }\n\n  return (\n    <div\n      className={classNames(\n        'resize-none normal rounded-lg appearance-none leading-tight',\n        'focus:outline-none w-full right-5 left-5 max-h-96 py-3 px-4',\n        { 'cursor-not-allowed': !canSend },\n      )}>\n      <div\n        id=\"messageBox\"\n        className=\"focus:outline-none\"\n        ref={messageBoxRef}\n        onKeyUp={onKeyUp}\n        contentEditable={canSend}\n        defaultValue={content}\n        placeholder={getPlaceholder()} />\n    </div>\n  );\n}\n\nexport default MessageBoxInput;","import { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uploadFileAsMessage } from '../../../store/messages';\n\ninterface MessageBoxLeftSideProps {\n  content: string;\n  editingMessageId?: string;\n}\n\nconst MessageBoxLeftSide: React.FunctionComponent<MessageBoxLeftSideProps> = (props) => {\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const dispatch = useDispatch();\n\n  const uploadInput = React.createRef<HTMLInputElement>();\n  const onChange: any = (e: Event) => {\n    const input = e.target as HTMLInputElement;\n    dispatch(uploadFileAsMessage(channel.id, { content: props.content }, input.files![0]));    \n  }\n\n  return (!props.editingMessageId) ? (\n    <div className=\"px-4\">\n      <div className=\"relative\">\n        <input\n          ref={uploadInput}\n          type=\"file\"\n          name=\"file\"\n          accept=\"image/*\"\n          onChange={onChange}\n          hidden />\n        <FontAwesomeIcon\n          icon={faUpload}\n          onClick={() => uploadInput.current?.click()}\n          className=\"cursor-pointer z-1\" />\n      </div>\n    </div>\n  ) : null;\n}\nexport default MessageBoxLeftSide;","import { useSelector, useStore } from 'react-redux';\nimport { getTypersInChannel } from '../../../store/typing';\nimport { getUser } from '../../../store/users';\n\nconst TypingUsers: React.FunctionComponent = () => {\n  const store = useStore();\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const typers = useSelector(getTypersInChannel(channel.id));\n\n  if (!typers.length) return null;\n  \n  const user = (userId: string) => getUser(userId)(store.getState());\n\n  const maxTypers = 3;\n  const typingUsers = typers\n    .map(t => user(t.userId)!.username)\n    .join(', ');\n\n  return (\n    <span>\n      {(typers.length > maxTypers)\n        ? 'Many users are typing...'\n        : `${typingUsers} is typing...`}\n    </span>\n  );\n}\n\nexport default TypingUsers;","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createMessage, updateMessage } from '../../../store/messages';\nimport { actions as ui } from '../../../store/ui';\nimport MessageBoxInput from './message-box-input';\nimport MessageBoxLeftSide from './message-box-left-side';\nimport TypingUsers from './typing-users';\n\nexport interface MessageBoxProps {\n  content?: string;\n  cachedContent?: Util.Dictionary;\n  setCachedContent?: React.Dispatch<React.SetStateAction<Util.Dictionary>>;\n}\n \nconst MessageBox: React.FunctionComponent<MessageBoxProps> = (props) => {\n  const dispatch = useDispatch();\n  const [content, setContent] = useState(props.content ?? '');\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const editingMessageId = useSelector((s: Store.AppState) => s.ui.editingMessageId);\n\n  useEffect(() => {\n    const messageBox = document.querySelector('#messageBox') as HTMLDivElement;\n    messageBox.innerText = props.cachedContent?.[channel.id] ?? content;\n  }, [channel.id]);\n\n  useEffect(() => {\n    if (props.cachedContent && props.setCachedContent) {\n      props.cachedContent[channel.id] = content;\n      props.setCachedContent(props.cachedContent);\n    }\n  }, [content]);\n\n  const stopEditing = () => dispatch(ui.stoppedEditingMessage());\n  const saveEdit = () => {\n    (editingMessageId)\n      ? dispatch(updateMessage(editingMessageId, { content }))\n      : dispatch(createMessage(channel.id, { content }));\n      \n    setContent('');\n    stopEditing();\n  }\n  \n  return (\n    <div className={(editingMessageId) ? 'mt-2' : 'px-4'}>\n      <div className=\"rounded-lg bg-bg-secondary flex items-center\">\n        <MessageBoxLeftSide\n          content={content}\n          editingMessageId={editingMessageId}  />\n        <MessageBoxInput\n          contentState={[content, setContent]}\n          saveEdit={saveEdit} />\n      </div>\n      <div className=\"text-sm w-full h-6\">\n      {(editingMessageId)\n        ? <span className=\"text-xs py-2\">\n            escape to <Link to=\"#\" onClick={stopEditing}>cancel</Link> • \n            enter to <Link to=\"#\" onClick={saveEdit}> save</Link>\n          </span>\n        : <TypingUsers />}\n      </div>\n    </div>\n  );\n}\n\nexport default MessageBox;\n","export default {\n  email: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\n  hexColor: /^#(?:[0-9a-fA-F]{3}){1,2}$/,\n  password: /(?=.*[a-zA-Z0-9!@#$%^&*])/,\n  snowflake: /^\\d{18}$/,\n  status: /^ONLINE|^BUSY$|^AFK$|^OFFLINE$/,\n  textChannelName: /^[A-Za-z\\-\\d]{2,32}$/,\n  username: /(^(?! |^everyone$|^here$|^me$|^someone$)[A-Za-z\\d\\-\\_ ]{2,32}(?<! )$)/,\n  roleName: /(^(?! |^everyone$|^here$|^me$|^someone$)(.*){2,32}(?<! )$)/,\n  url: /(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*))/gm,\n}","import defaultPatterns from '../types/patterns';\n\nexport class FormatService {\n  private readonly patterns = {\n    boldItalic: /\\*\\*\\*(.*?)\\*\\*\\*/gs,\n    bold: /\\*\\*(.*?)\\*\\*/gs,\n    italic: /^(?!=<code>)\\*(.*?)\\*|_(.*?)_/gs,\n    underline: /__(.*?)__/gs,\n    underlineItalics: /__\\*(.*?)\\*__/gs,\n    underlineBold: /__\\*\\*(.*?)\\*\\*__/gs,\n    underlineBoldItalics: /__\\*\\*\\*(.*?)\\*\\*\\*__/gs,\n    strikethrough: /~~(.*?)~~/gs,\n    codeMultiline: /```(.*?)```/gs,\n    codeLine: /`(.*?)`/gs,\n    blockQuoteMultiline: />>> (.*)/gs,\n    blockQuoteLine: /^> (.*)$/gm,\n    url: /(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*))/gm,\n  };\n\n  public toHTML(content: string) {\n    return content\n      .replace(this.patterns.underlineBold, '<u><strong>$1</strong></u>')\n      .replace(this.patterns.underlineItalics, '<u><em>$1</em></u>*__')\n      .replace(this.patterns.underlineBoldItalics, '<u><strong><em>$1</em></strong></u>')\n      .replace(this.patterns.strikethrough, '<del>$1</del>')\n      .replace(this.patterns.boldItalic, '<strong><em>$1</em></strong>')\n      .replace(this.patterns.underline, '<u>$1</u>')\n      .replace(this.patterns.bold, '<strong>$1</strong>')\n      .replace(this.patterns.italic, '<em>$1$2</em>')\n      .replace(this.patterns.codeMultiline, '<pre><code>$1</code></pre>')\n      .replace(this.patterns.codeLine, '<code>$1</code>')\n      .replace(this.patterns.blockQuoteLine, '<span class=\"blockquote pl-1\">$1</span>')\n      .replace(this.patterns.blockQuoteMultiline, '<div class=\"blockquote pl-1\">$1</div>')\n      .replace(defaultPatterns.url, '<a href=\"$1\" target=\"_blank\">$1</div>');\n  }\n\n  // FIXME:\n  public messageBox(content: string) {\n    return content\n      .replace(this.patterns.underlineBold, '__**<u><strong>$1</strong></u>**__')\n      .replace(this.patterns.underlineItalics, '__*<u><em>$1</em></u>*__')\n      .replace(this.patterns.underlineBoldItalics, '__***<u><strong><em>$1</em></strong></u>***__')\n      .replace(this.patterns.strikethrough, '~~<del>$1</del>~~')\n      .replace(this.patterns.boldItalic, '***<strong><em>$1</em></strong>***')\n      .replace(this.patterns.underline, '<u>$1</u>')\n      .replace(this.patterns.bold, '**<strong>$1</strong>**')\n      .replace(this.patterns.italic, '<em>$1$2</em>')\n      .replace(this.patterns.codeMultiline, '<pre><code>$1</code></pre>')\n      .replace(this.patterns.codeLine, '<code>$1</code>')\n      .replace(this.patterns.blockQuoteLine, '<span class=\"blockquote pl-1\">$1</span>')\n      .replace(this.patterns.blockQuoteMultiline, '<div class=\"blockquote pl-1\">$1</div>')\n      .replace(defaultPatterns.url, '<a href=\"$1\" target=\"_blank\">$1</div>');\n  }\n}","import { getChannel, getChannelByName } from '../store/channels';\nimport { getUser, getUserByTag } from '../store/users';\n\nexport class MentionService {\n  public readonly tags = ['@245538070684827648', '#\\d{18}'];\n\n  private readonly patterns = {\n    formatted: {\n      channel: /<#(\\d{18})>/gm,\n      user: /<@(\\d{18})>/gm,\n    },\n    original: {\n      channel: /#([A-Za-z\\-\\d]{2,32})/gm,\n      user: /@([A-Za-z\\d\\-\\_ ]{2,32}#\\d{4})/gm,\n    },\n  };\n\n  constructor(private state: Store.AppState) {}\n\n  // messageBox.onInput -> formatted mentions appear fancy in message box \n  public formatOriginal(content: string) {    \n    const guildId = this.state.ui.activeGuild!.id;\n    return content\n      .replace(this.patterns.original.channel, (og, name) => {        \n        const channel = getChannelByName(guildId, name)(this.state);\n        return (channel) ? `<#${channel?.id}>` : og;\n      })\n      .replace(this.patterns.original.user, (og, tag) => {        \n        const user = getUserByTag(tag)(this.state);\n        return (user) ? `<@${user.id}>` : og;\n      })\n  }\n\n  public toHTML(content: string) {\n    return content\n      .replace(this.patterns.formatted.channel, (_, id) => this.mentionAnchorTag('channel', id))\n      .replace(this.patterns.formatted.user, (_, id) => this.mentionAnchorTag('user', id));\n  }\n\n  private mentionAnchorTag(type: 'channel' | 'user', id: string) {\n    const selfUserId = this.state.auth.user!.id;\n    const guildId = this.state.ui.activeGuild!.id;\n    const tag = {\n      channel: {\n        onClick: `window.location.href = '/channels/${guildId}/${id}'`,\n        text: `#${getChannel(id)(this.state)?.name}`,\n      },\n      user: {\n        onClick: `events.emit('openUserProfile', '${id}')`,\n        text: `@${this.tag(getUser(id)(this.state))}`,\n      },\n    };\n\n    const mentioned = (id === selfUserId) ? 'bg-tertiary rounded px-1' : '';\n    return `<a\n      data-id=\"${id}\"\n      class=\"font-extrabold cursor-pointer hover:underline ${mentioned}\"\n      onclick=\"${tag[type].onClick}\">${tag[type].text}</a>`;\n  }\n\n  private tag(user: Entity.User) {\n    const tag = (user.discriminator || 0)\n      .toString()\n      .padStart(4, '0');\n    return `${user.username ?? 'Unknown'}#${tag}`;\n  }\n}","import { useStore } from 'react-redux';\nimport { MentionService } from '../services/mention-service';\n\nconst useMentions = (): MentionService => {\n  const state = useStore().getState();\n  return new MentionService(state);\n}\n \nexport default useMentions;","import { FormatService } from '../services/format-service';\nimport useMentions from './use-mentions';\n\nconst useFormat = () => {\n  const format = new FormatService();\n  const mentions = useMentions();\n\n  return (content: string) => {\n    return format.toHTML(mentions.toHTML(content));\n  };\n}\n \nexport default useFormat;","import MessageBox from '../message-box/message-box';\nimport { FunctionComponent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { previewImage } from '../../../store/ui';\nimport useFormat from '../../../hooks/use-format';\nimport striptags from 'striptags';\n\ninterface MessageContentProps {\n  message: Entity.Message;\n}\n\nconst MessageContent: FunctionComponent<MessageContentProps> = ({ message }) => {\n  const dispatch = useDispatch();\n  const format = useFormat();\n  const editingMessageId = useSelector((s: Store.AppState) => s.ui.editingMessageId);\n\n  const messageHTML =\n    ((message.content)\n      ? striptags(format(message.content), 'a')\n      : ''\n    ) + ((message.updatedAt && message.content)\n      ? `<span\n          class=\"select-none muted edited text-xs ml-1\"\n          title=\"${message.updatedAt}\">(edited)</span>`\n      : ''\n    );\n\n  const Attachments: React.FunctionComponent = () => (\n    <>\n      {message.attachmentURLs?.map(imageURL =>\n        <img\n          key={imageURL}\n          style={{ maxWidth: '384px' }}\n          className=\"my-2 cursor-pointer\"\n          onClick={() => dispatch(previewImage(imageURL))}\n          src={process.env.REACT_APP_CDN_URL + imageURL}\n          onError={(e) => {\n            e.currentTarget.onerror = null;\n            e.currentTarget.src = `${process.env.REACT_APP_CDN_URL}/images/image-not-found.png`;\n          }} />)}\n    </>\n  );\n  \n  return (editingMessageId === message.id)\n    ? <MessageBox content={message.content} />\n    : <div className=\"relative\">\n        <div\n          style={{ maxWidth: '963px' }}\n          className=\"normal whitespace-pre-wrap\">\n          <div\n            dangerouslySetInnerHTML={{ __html: messageHTML }}\n            className=\"overflow-auto\"\n            style={{ maxWidth: '100%' }} />\n          <Attachments />\n        </div>\n      </div>;\n}\n\nexport default MessageContent;","import moment from 'moment';\nimport { FunctionComponent } from 'react';\n\ninterface MessageTimestampProps {\n  message: Entity.Message;\n}\n \nconst MessageTimestamp: FunctionComponent<MessageTimestampProps> = ({ message }) => {\n  const toDays = (date: Date) => date.getTime() / 1000 / 60 / 60 / 24; \n\n  const createdAt = new Date(message.createdAt);\n  const midnight = new Date(new Date().setHours(0, 0, 0, 0));\n  const daysAgo = Math.floor(toDays(midnight) - toDays(createdAt));\n\n  function getTimestamp() {\n    const wasToday = midnight.getDate() === createdAt.getDate();\n    if (wasToday) return '[Today at] HH:mm';\n    else if (daysAgo === 1) return '[Yesterday at] HH:mm';\n    return 'DD/MM/YYYY';\n  }\n  return <span>{moment(createdAt).format(getTimestamp())}</span>;\n}\n\nexport default MessageTimestamp;","import moment from 'moment';\nimport { FunctionComponent } from 'react';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { useSelector } from 'react-redux';\nimport { getMember } from '../../../store/members';\nimport { getMemberHighestRole } from '../../../store/roles';\nimport MessageTimestamp from './message-timestamp';\n\ninterface MessageHeaderProps {\n  message: Entity.Message;\n  author?: Entity.User;\n  isExtra?: boolean;\n}\n \nconst MessageHeader: FunctionComponent<MessageHeaderProps> = ({ author, message, isExtra = false }) => {\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const member = useSelector(getMember(guild.id, message.authorId));\n  const highestRole = useSelector(getMemberHighestRole(guild.id, member?.userId ?? ''));\n  if (isExtra) return null;\n\n  return (!message.system && author) ? (\n    <div>\n      <ContextMenuTrigger id={author.id}>\n        <span\n          style={{ color: highestRole.color }}\n          className=\"text-base heading hover:underline cursor-pointer mr-2\">{author.username}</span>\n      </ContextMenuTrigger>\n      <span className=\"text-xs\">\n        <MessageTimestamp message={message} />\n      </span>\n    </div>\n  ) : (\n    <span className=\"text-xs muted\">\n      <MessageTimestamp message={message} />\n    </span>    \n  );\n}\n \nexport default MessageHeader;","import './message.scoped.css';\nimport './message.global.css';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getChannelMessages } from '../../../store/messages';\nimport { getUser } from '../../../store/users';\nimport MessageToolbar from './message-toolbar';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport MessageMenu from '../../ctx-menus/message-menu';\nimport classNames from 'classnames';\nimport Image from '../../utils/image';\nimport MessageContent from './message-content';\nimport MessageHeader from './message-header';\nimport { openUserProfile } from '../../../store/ui';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nexport interface MessageProps {\n  message: Entity.Message;\n}\n\nconst Message: React.FunctionComponent<MessageProps> = ({ message }: MessageProps) => {\n  const author = useSelector(getUser(message.authorId));\n  const messages = useSelector(getChannelMessages(message.channelId));\n  const createdAt = new Date(message.createdAt);\n\n  const isExtra = () => {\n    const i = messages.findIndex(m => m.id === message.id);\n    const prev = messages[i - 1];\n    if (!prev) return false;\n\n    const minsSince = moment(createdAt).diff(prev.createdAt, 'minutes');    \n    const minsToSeparate = 5;\n\n    return minsSince <= minsToSeparate\n        && prev.authorId === message.authorId;\n  }\n  const isActuallyExtra = isExtra();\n\n  const LeftSide: React.FunctionComponent = () => {\n    const dispatch = useDispatch();\n\n    if (message.system && message.type === 'GUILD_MEMBER_JOIN') return (\n      <FontAwesomeIcon\n        className=\"ml-8 mt-1.5\"\n        color=\"var(--success)\"\n        icon={faArrowRight} />\n    ); \n    if (message.system && message.type === 'GUILD_MEMBER_LEAVE') return (\n      <FontAwesomeIcon\n        className=\"ml-8 mt-1.5\"\n        color=\"var(--danger)\"\n        icon={faArrowLeft} />\n    ); \n    if (message.system) return (\n      <FontAwesomeIcon\n        className=\"ml-8 mt-2\"\n        color=\"var(--tertiary)\"\n        icon={faInfoCircle} />\n    ); \n\n    return (isActuallyExtra)\n      ? <span className=\"timestamp text-xs select-none\">\n          {moment(createdAt).format('HH:mm')}\n        </span>\n      : <Image\n          className=\"rounded-full cursor-pointer w-10 h-10\"\n          src={`${process.env.REACT_APP_CDN_URL}${author.avatarURL}`}\n          onError={e => e.currentTarget.src = `${process.env.REACT_APP_CDN_URL}/avatars/unknown.png`}\n          onClick={() => dispatch(openUserProfile(author))}\n          alt={author.username} />;\n  }\n\n  return (\n    <ContextMenuTrigger key={message.id} id={message.id}>\n      <div className={classNames('message flex', { 'mt-4': !isActuallyExtra })}>\n        <div className=\"flex-shrink-0 left-side text-xs w-16 mr-2 pl-5 pt-1\"><LeftSide /></div>\n        <div className=\"relative flex-grow px-2\">\n          <div className=\"absolute toolbar right-0 -mt-3 z-10\">\n            <MessageToolbar message={message} />\n          </div>\n          {(message.system)\n            ? (\n              <div className=\"my-1\">\n                <MessageContent message={message} />\n                <MessageHeader message={message} />\n              </div>\n            ) : (\n              <>\n                <MessageHeader\n                  author={author}\n                  message={message}\n                  isExtra={isActuallyExtra} />\n                <MessageContent message={message} />\n              </>\n          )}\n        </div>\n        <div className=\"right-side w-12\" />\n      </div>\n      <MessageMenu message={message} />\n    </ContextMenuTrigger>\n  );\n}\n\nexport default Message;","import { faEyeSlash, faHashtag } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSelector } from 'react-redux';\n\nexport interface TextChannelHeaderProps {\n  canRead?: boolean;\n}\n \nconst TextChannelHeader: React.FunctionComponent<TextChannelHeaderProps> = ({ canRead }) => {\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  \n  return (\n    <div className=\"m-4 pb-6 border-bottom\">\n      <span className=\"rounded-full\">\n        <FontAwesomeIcon\n          className=\"muted\"\n          icon={canRead ? faHashtag : faEyeSlash}\n          size=\"3x\" />\n      </span>\n      <h1 className=\"text-3xl font-bold my-2\">\n        {(canRead)\n          ? `Welcome to #${channel.name}!`\n          : `Message history hidden.`\n        }</h1>\n      <p className=\"lead\">\n        {(canRead)\n          ? `This is the start of the #${channel.name} channel.`\n          : `Insufficient permissions to view messages in this channel.`\n        }</p>\n    </div>\n  );\n}\n\nexport default TextChannelHeader;","const SkeletonMessage: React.FunctionComponent = () => {\n  return (    \n    <div className=\"rounded-md px-5 py-2 max-w-sm w-full\">\n      <div className=\"animate-pulse flex space-x-4\">\n        <div className=\"rounded-full bg-bg-tertiary h-10 w-10\"></div>\n        <div className=\"flex-1 space-y-4 py-1\">\n          <div className=\"h-4 bg-bg-tertiary rounded w-3/4\"></div>\n          <div className=\"space-y-2\">\n            <div className=\"h-4 bg-bg-tertiary rounded\"></div>\n            <div className=\"h-4 bg-bg-tertiary rounded w-5/6\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n \nexport default SkeletonMessage;","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchMessages, getChannelMessages } from '../../store/messages';\nimport Message from './message/message';\nimport MessageBox from './message-box/message-box';\nimport { useEffect, useRef, useState } from 'react';\nimport TextChannelHeader from './text-channel-header';\nimport usePerms from '../../hooks/use-perms';\nimport SkeletonMessage from '../skeleton/skeleton-message';\n \nconst TextBasedChannel: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const messages = useSelector(getChannelMessages(channel.id));\n  const perms = usePerms();\n  const [cachedContent, setCachedContent] = useState<Util.Dictionary>({});\n  const messagesRef = useRef<HTMLDivElement>(null);\n  const msgCount = useSelector((s: Store.AppState) => s.entities.messages.total[channel.id]);\n  \n  const batchSize = 25;\n  const loadedAllMessages = msgCount === messages.length;\n\n  useEffect(() => {\n    messagesRef.current!.scroll({\n      top: messagesRef.current?.scrollHeight,\n    });\n  }, [messages[messages.length - 1]]);\n\n  useEffect(() => {\n    const messageBox = document.querySelector('#messageBox') as HTMLDivElement;\n    messageBox.focus();\n    \n    dispatch(fetchMessages(channel.id, batchSize));\n  }, [channel.id]);\n\n  const onScroll = (e) => {\n    if (messagesRef.current!.scrollTop > 0 || loadedAllMessages) return;\n\n    const back = messages.length + batchSize;\n    dispatch(fetchMessages(channel.id, back));\n  }\n\n  const canRead = perms.canInChannel('READ_MESSAGES', guild.id, channel.id);\n\n  const LoadingIndicator: React.FunctionComponent = () => (\n    <>\n      {!(canRead && loadedAllMessages) &&\n        new Array(!canRead ? 6 : 2)\n          .fill(0)\n          .map((_, i) => <SkeletonMessage key={i} />)}\n    </>\n  );\n\n  return (\n    <div className=\"h-full flex flex-col flex-grow\">\n      <div\n        id=\"messages\"\n        ref={messagesRef}\n        className=\"overflow-auto mb-5 mr-1 mt-1 flex-grow\"\n        onScroll={onScroll}>\n        <TextChannelHeader canRead={canRead} />\n        <LoadingIndicator />\n        {canRead && messages.map(m => <Message key={m.id} message={m} />)}\n      </div>\n      <MessageBox\n        cachedContent={cachedContent}\n        setCachedContent={setCachedContent} />\n    </div>\n  );\n}\n\nexport default TextBasedChannel;","import Select from 'react-select';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getGuildRoles } from '../../../store/guilds';\nimport { useState } from 'react';\nimport { updateMember } from '../../../store/members';\nimport usePerms from '../../../hooks/use-perms';\n\nexport interface RoleManagerProps {\n  member: Entity.GuildMember;\n}\n\nconst RoleManager: React.FunctionComponent<RoleManagerProps> = ({ member }) => {\n  const removeEveryone = (arr: any[]) => arr.slice(1);\n  const slicedRoleIds = removeEveryone(member.roleIds);\n\n  const perms = usePerms();\n  const dispatch = useDispatch();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const roles = removeEveryone(useSelector(getGuildRoles(guild.id)));\n  const [roleIds, setRoleIds] = useState(slicedRoleIds);\n\n  const colorStyles = {\n    control: () => ({\n      width: '200px',\n      backgroundColor: 'var(--bg-secondary)',\n    }),\n    option: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: 'var(--bg-secondary)',\n      cursor: (data.disabled) ? 'not-allowed' : 'pointer',\n      opacity: (data.disabled) ? 0.5 : 1,\n    }),\n    input: (styles) => ({ ...styles, color: 'var(--font)' }),\n    menu: (styles) => ({\n      ...styles,\n      backgroundColor: 'var(--bg-secondary)',\n    }),\n    multiValue: (styles) => ({\n      ...styles,\n      color: 'var(--font)',\n      backgroundColor: 'var(--bg-tertiary)',\n    }),\n    indicatorSeparator: () => ({ display: 'none' }),\n    indicatorsContainer: (styles) => ({ ...styles, float: 'right' }),\n    multiValueLabel: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: 'var(--bg-tertiary)',\n    }),\n  };\n  \n  const rolesHaveChanged = JSON.stringify(roleIds) !== JSON.stringify(slicedRoleIds);\n  const roleOption = (role: Entity.Role) => ({\n    label: role.name,\n    value: role.id,\n    color: role.color,\n    disabled: !perms.memberIsHigher(guild.id, [role.id]),\n  });\n  \n  return (\n    <div onClick={e => e.preventDefault()}>\n      <Select\n        defaultValue={roleIds.map(id => {\n          const role = roles.find(r => r.id === id);\n          return (role) ? roleOption(role) : undefined;\n        })}\n        name=\"colors\"\n        options={roles.map(roleOption)}\n        isOptionDisabled={(option) => option.disabled}\n        onChange={options => setRoleIds(options.map(o => o.value))}\n        onMenuClose={() => rolesHaveChanged && dispatch(updateMember(member.id, { roleIds }))}\n        styles={colorStyles}\n        placeholder=\"Add roles...\"\n        noOptionsMessage={() => 'No roles to add'}\n        // onChange={e => setRoleIds(e.currentTarget.value as any)}\n        // onClick={() => dispatch(updateMember(member.id, { roleIds }))}\n        isMulti />\n    </div>\n  );\n}\n\nexport default RoleManager;","import { faBan, faIdCard, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport usePerms from '../../../hooks/use-perms';\nimport { getMember, kickMember } from '../../../store/members';\nimport { actions as ui, openUserProfile } from '../../../store/ui';\nimport { toggleBlockUser } from '../../../store/users';\nimport UserProfile from '../../modals/user-profile';\nimport Category from '../../utils/category';\nimport DevModeMenuSection from '../dev-mode-menu-section';\nimport RoleManager from './role-manager';\n\nexport interface GuildMemberMenuProps {\n  user: Entity.User;\n}\n\nconst GuildMemberMenu: React.FunctionComponent<GuildMemberMenuProps> = ({ user }) => {\n  const dispatch = useDispatch();\n  const perms = usePerms();\n  const selfUser = useSelector((s: Store.AppState) => s.auth.user)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const member = useSelector(getMember(guild.id, user.id))!;\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  const isSelf = user.id === selfUser.id;  \n  const userIsBlocked = selfUser.ignored?.userIds.includes(member.userId);\n\n  const canKick = perms.can('KICK_MEMBERS', guild.id);\n  const canManage = perms.can('MANAGE_ROLES', guild.id);\n\n  const onKickMember = () => {\n    const discrim = user.discriminator.toString().padStart(4, '0');\n    const isConfirmed = window.confirm(`Kick ${user.username}#${discrim}`);\n    if (isConfirmed)\n      dispatch(kickMember(guild.id, user.id));\n  }\n\n  return (\n    <ContextMenu\n      id={user.id}\n      className=\"bg-bg-tertiary p-2 rounded shadow\">\n      <MenuItem\n        onClick={() => dispatch(openUserProfile(user))}\n        className=\"flex items-center justify-between cursor-pointer\">\n        <span>View Profile</span>\n        <FontAwesomeIcon icon={faUser} />\n      </MenuItem>\n      \n      {user.id !== selfUser.id && (<>\n        <hr className=\"my-2 border-bg-primary\" />\n        <MenuItem className=\"flex items-center justify-between  cursor-pointer danger\">\n          <span\n            onClick={() => dispatch(toggleBlockUser(member.userId))}>\n            {userIsBlocked ? 'Unblock' : 'Block'}\n          </span>\n          <FontAwesomeIcon icon={faBan} />\n        </MenuItem>\n      </>)}\n\n      {(canKick || canManage) && (\n        <div>\n          <hr className=\"my-2 border-bg-primary\" />\n          <Category title=\"Manage Roles\" className=\"pb-2\" />\n\n          {(!isSelf && perms.can('KICK_MEMBERS', guild.id)) && (\n            <MenuItem\n              className=\"danger cursor-pointer mb-2\"\n              onClick={onKickMember}>\n              <span>Kick {user.username}</span>\n            </MenuItem>\n          )}\n          {perms.can('MANAGE_ROLES', guild.id) && <RoleManager member={member} />}\n        </div>\n      )}\n\n      <div className=\"my-4\" />\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'User ID', id: user.id },\n        { title: 'Member ID', id: member.id },\n      ]} />}\n    </ContextMenu>\n  );\n}\n \nexport default GuildMemberMenu;","import Category from '../utils/category';\nimport Username from './username';\nimport { useSelector } from 'react-redux';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport GuildMemberMenu from '../ctx-menus/guild-member/guild-member-menu';\nimport { getGuildMembers, getGuildUsers } from '../../store/guilds';\nimport { filterHoistedRoles } from '../../store/roles';\nimport usePerms from '../../hooks/use-perms';\n\nconst MemberList: React.FunctionComponent = () => {\n  const perms = usePerms();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const isActive = useSelector((s: Store.AppState) => s.config.memberListToggled);\n  const hoistedRoles = useSelector(filterHoistedRoles(guild.id));\n  const members = useSelector(getGuildMembers(guild.id));\n\n  // get users that can view the channel\n  const users = useSelector(getGuildUsers(guild.id))\n    .filter(u => {\n      const member = members.find(m => m.userId === u.id)!;\n      return perms.canMember('VIEW_CHANNELS', guild, member);\n    });\n   \n  type UserListFilter = (s: Entity.User, i: number, a: Entity.User[]) => boolean;\n  const UserList = ({ category, filter: by }: { category: string, filter: UserListFilter }) => {\n    const filtered = users\n      .filter(by)\n      .sort((a, b) => a.username.localeCompare(b.username));\n\n    return (filtered.length) ? (\n      <div>\n        <Category\n          className=\"pt-6 pr-2 pl-4 h-10 mb-2 ml-2\"\n          title={category}\n          count={filtered.length} />\n        {filtered.map(u => (\n          <ContextMenuTrigger\n            id={u.id}\n            key={u.id}>\n            <div className=\"m-2\">\n              <Username guild={guild} user={u} />\n            </div>\n            <GuildMemberMenu user={u} />\n          </ContextMenuTrigger>\n        ))}\n      </div>\n    ) : null;\n  }\n\n  const getRoleIds = (userId: string) => members.find(m => m.userId === userId)!.roleIds;\n  const byPositionDesc = (a, b) => (a.position < b.position) ? 1 : -1\n  const hoistedRoleIds = (user: Entity.User) => getRoleIds(user.id)\n    .map(id => hoistedRoles.find(r => id === r.id))\n    .filter(r => r) // role could be deleted, on member\n    .sort(byPositionDesc)\n    .map(r => r!.id);\n\n  return (isActive) ? (\n    <div className=\"overflow-auto bg-bg-secondary w-64\">\n      {hoistedRoles.map(r =>\n        <UserList\n          key={r.id}\n          category={r.name}\n          filter={u => (\n            getRoleIds(u.id).includes(r.id)\n              && hoistedRoleIds(u)[0] === r.id\n              && u.status === 'ONLINE')} />\n      )}\n      <UserList\n        category=\"Online\"\n        filter={u => u.status === 'ONLINE' && !hoistedRoleIds(u).length} />\n      <UserList\n        category=\"Offline\"\n        filter={u => u.status === 'OFFLINE'} />\n    </div>\n  ) : null;\n}\n \nexport default MemberList;","import { useDispatch, useSelector } from 'react-redux';\nimport AppNavbar from '../navigation/app-navbar';\nimport Sidebar from '../navigation/sidebar/sidebar';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { actions as uiActions } from '../../store/ui';\nimport TextBasedChannel from '../channel/text-based-channel';\nimport MemberList from '../user/member-list';\nimport { getGuild, getGuildChannels } from '../../store/guilds';\nimport { useEffect } from 'react';\nimport PageWrapper from './page-wrapper';\nimport { getChannel } from '../../store/channels';\n\nconst GuildPage: React.FunctionComponent = () => {  \n  const { channelId, guildId }: any = useParams();\n  const dispatch = useDispatch();\n  const ui = useSelector((s: Store.AppState) => s.ui);\n  const guild = useSelector(getGuild(guildId));\n  const channel = useSelector(getChannel(channelId));\n  const guildChannels = useSelector(getGuildChannels(guildId));\n\n  useEffect(() => {\n    dispatch(uiActions.pageSwitched({ channel, guild }));\n  }, [guild, channel]);\n\n  if (!guild) \n    return <Redirect to=\"/channels/@me\" />;\n  else if (guildChannels.length && !channelId) {\n    const systemChannel = guildChannels[0];\n    return <Redirect to={`/channels/${guild.id}/${systemChannel.id}`} />;\n  }  \n\n  return (ui.activeGuild) ? (\n    <PageWrapper pageTitle={channel?.name ?? guild.name}>\n      <Sidebar />\n      {(channel)\n        ? <div className=\"bg-bg-primary\">\n            <AppNavbar />\n            <div\n              style={{ height: 'calc(100vh - 48px)' }}\n              className=\"flex\">\n              {ui.activeChannel && {\n                'TEXT': <TextBasedChannel />,\n                'VOICE': <div className=\"w-full p-2\">Add something cool here for voice channels?</div>,\n              }[channel.type]}\n              <MemberList />\n            </div>\n          </div>\n        : <div className=\"bg-bg-tertiary\" />}\n    </PageWrapper>\n  ) : null;\n}\n \nexport default GuildPage;","import { FunctionComponent } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport Input from '../../inputs/input';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport { sendVerifyCode } from '../../../store/auth';\n\ninterface VerifyCodeInputProps {}\n \nconst VerifyCodeInput: FunctionComponent<VerifyCodeInputProps> = () => {\n  const dispatch = useDispatch();\n  const verifyForm = useForm();\n  const onVerify = () => dispatch(sendVerifyCode(verifyForm.getValues().code));\n  \n  return (\n    <div>\n      <hr className=\"border-gray-500 my-4\" />\n      <div className=\"flex items-end\">\n        <Input\n          type=\"text\" \n          name=\"code\"\n          label=\"Verify Code\"\n          className=\"w-full mr-2\"\n          register={verifyForm.register} />\n        <NormalButton\n          type=\"button\"\n          onClick={onVerify}\n          className=\"bg-success text-black h-10\">Verify</NormalButton>\n      </div>\n    </div>\n  );\n}\n \nexport default VerifyCodeInput;","import './login-page.scoped.css';\n\nimport { Link, Redirect, useLocation } from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PageWrapper from '../page-wrapper';\nimport Input from '../../inputs/input';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport { loginUser, forgotPasswordEmail, sendVerifyCode } from '../../../store/auth';\nimport { useState } from 'react';\nimport VerifyCodeInput from './verify-code-input';\n\nconst LoginPage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, getValues } = useForm();\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const shouldVerify = useSelector((s: Store.AppState) => s.auth.shouldVerify);\n  const query = new URLSearchParams(useLocation().search);\n  const [email, setEmail] = useState(query.get('email') ?? '');\n\n  const onLogin = (data) => dispatch(loginUser(data));\n  const resetPassword = () => dispatch(forgotPasswordEmail(getValues().email));\n\n  return (user)\n    ? <Redirect to=\"/channels/@me\" />\n    : (\n      <PageWrapper pageTitle=\"accord.app | Login\">\n        <div className=\"flex items-center absolute justify-center h-screen\">\n          <form\n            className=\"rounded-md shadow bg-bg-primary p-8\"\n            onSubmit={handleSubmit(onLogin)}>\n            <h1 className=\"text-3xl font-bold\">Welcome back!</h1>\n            <p className=\"lead\">We're so excited to see you again!</p>\n\n            <Input\n              label=\"Email\"\n              name=\"email\"\n              register={register}\n              className=\"mt-3\"\n              defaultValue={email!}\n              onInput={(e) => setEmail(e.currentTarget.value)} />\n            <Input\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              register={register}\n              className=\"mt-3\" />\n            <Link to=\"#\" onClick={resetPassword}>Forgot your password?</Link>\n\n            {shouldVerify && <VerifyCodeInput />}\n\n            <NormalButton className=\"bg-primary font w-full h-11 rounded-md mt-8\">\n              {(shouldVerify) ? 'Resend Code' : 'Login'}\n            </NormalButton>\n            <p className=\"mt-2\">Need an account? <Link to={`/register${email && `?email=${email}`}`}>Register</Link></p>\n          </form>\n        </div>\n        <Particles width=\"100%\" height=\"100%\" />\n      </PageWrapper>\n    );\n}\n\nexport default LoginPage;","import Particles from 'react-particles-js';\nimport { Link, Redirect, useLocation } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\n\nimport './register-page.scoped.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { registerUser } from '../../../store/auth';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport PageWrapper from '../page-wrapper';\nimport Input from '../../inputs/input';\nimport { useState } from 'react';\n\nconst RegisterPage: React.FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const dispatch = useDispatch();\n  const { register, handleSubmit } = useForm();\n  const query = new URLSearchParams(useLocation().search);\n  const [email, setEmail] = useState(query.get('email') ?? '');\n\n  const onSubmit = (data) => dispatch(registerUser(data));\n\n  return (user)\n    ? <Redirect to=\"/channels/@me\" />\n    : (\n      <PageWrapper>\n        <div className=\"flex items-center justify-center absolute h-screen\">\n          <form className=\"rounded-md shadow bg-bg-primary p-8\"\n            onSubmit={handleSubmit(onSubmit)}>\n            <h1 className=\"text-2xl font-bold mb-8 text-center\">Create an account</h1>\n\n            <Input\n              label=\"Email\"\n              name=\"email\"\n              register={register}\n              className=\"mt-3\"\n              defaultValue={email!}\n              onInput={(e) => setEmail(e.currentTarget.value)} />\n            <Input\n              label=\"Username\"\n              name=\"username\"\n              register={register}\n              className=\"mt-3\" />\n            <Input\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              register={register}\n              className=\"mt-3\" />\n\n            <NormalButton className=\"bg-primary font w-full h-11 rounded-md mt-8\">Register</NormalButton>\n            <p className=\"mt-2\">\n              <Link to={`/login${email && `?email=${email}`}`}>Already have an account?</Link>\n            </p>\n          </form>\n        </div>\n        <Particles width=\"100%\" height=\"100%\" />\n      </PageWrapper>\n    );\n}\n\nexport default RegisterPage;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as ui } from '../../store/ui';\nimport AppNavbar from '../navigation/app-navbar';\nimport Sidebar from '../navigation/sidebar/sidebar';\nimport PageWrapper from './page-wrapper';\n\nconst OverviewPage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(ui.pageSwitched({ channel: null, guild: null }));\n  }, []);\n\n  return (\n    <PageWrapper\n      className=\"bg-bg-primary h-full w-full\"\n      pageTitle=\"accord.app\">\n      <Sidebar />\n      <AppNavbar />\n      <div className=\"bg-bg-primary h-full w-full flex flex-col flex-grow\"></div>\n    </PageWrapper>\n  );\n}\n \nexport default OverviewPage;","import { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logoutUser } from '../../../store/auth';\n\nconst LogoutPage: React.FunctionComponent = () => {\n  useDispatch()(logoutUser());\n  \n  return <Redirect to=\"/\" push />;\n}\n \nexport default LogoutPage;","import { useEffect } from 'react';\nimport PageWrapper from './page-wrapper';\nimport { ready } from '../../store/auth';\nimport { useDispatch } from 'react-redux';\nimport fetchEntities from '../../store/actions/fetch-entities';\n\nconst LoadingPage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(ready());\n    dispatch(fetchEntities());\n  }, []);\n\n  const tips = [\n    'Did Discord steal our idea?!?!',\n    'ADAMJR, Stop refactoring code please. okthxbye.',\n    'Sample Text.',\n    '!(\\'Hello World\\')',\n    'May work on a Tesla',\n    'Please subscribe.',\n    'Hi YouTube!',\n    'accord.includes(\\'VOICE_CHANNEL\\') === false',\n    'This message is officially dumb.',\n    'This message is funny.',\n    'Dear Bill Gates please buy my app okthxbye.',\n    'Is coding the same as programming? :thinking:',\n    'TypeError: There may be bugs.',\n    'What is a Discord? :thinking:',\n    'What\\'s your Skype? Wait, actually I don\\'t want your IP. Cya.',\n    'Started in 2020.',\n    'Disclaimer: Not actually a Discord clone.',\n  ];\n  const randomIndex = Math.floor(Math.random() * tips.length);\n\n  return (\n    <PageWrapper\n      pageTitle=\"Loading...\"\n      className=\"flex items-center justify-center h-screen\">\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl\">Loading...</h1>\n        <p className=\"lead block\">{tips[randomIndex]}</p>\n      </div>\n    </PageWrapper>\n  );\n}\n \nexport default LoadingPage;\n","import { useSelector } from 'react-redux';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport LoadingPage from '../pages/loading-page';\n\n// this route ensures that the user is logged in, else redirects them \nconst PrivateRoute: React.FunctionComponent<RouteProps> = (props) => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const fetchedEntities = useSelector((s: Store.AppState) => s.meta.fetchedEntities);\n  const attemptedLogin = useSelector((s: Store.AppState) => s.auth.attemptedLogin);\n\n  if (attemptedLogin && !user)\n    return <Redirect to=\"/login\" />;\n  else if (!user || !fetchedEntities)\n    return <LoadingPage />;\n  \n  return (\n    <Route {...props} />\n  );\n}\n \nexport default PrivateRoute;","import Particles from 'react-particles-js';\nimport { Link } from 'react-router-dom';\nimport CircleButton from '../utils/buttons/circle-button';\nimport PageWrapper from './page-wrapper';\n\nconst NotFoundPage: React.FunctionComponent = () => {\n  return (\n    <PageWrapper\n      className=\"relative w-screen h-screen\"\n      pageTitle=\"accord.app | Not Found\">\n      <header className=\"absolute text-center bottom-1/2 right-1/2\">\n        <h1 className=\"text-4xl pb-3\">Not Found</h1>\n        <Link to=\"/\">\n          <CircleButton>Return Home</CircleButton>\n        </Link>\n      </header>\n      <Particles width=\"100%\" height=\"100%\" />\n    </PageWrapper>\n  );\n}\n \nexport default NotFoundPage;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, useLocation } from 'react-router';\nimport { sendVerifyCode } from '../../../store/auth';\nimport LoadingPage from '../loading-page';\n\nconst VerifyPage: React.FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const dispatch = useDispatch();\n  const query = new URLSearchParams(useLocation().search);\n  const code = query.get('code')?.toString();\n  \n  useEffect(() => {\n    if (code)\n      dispatch(sendVerifyCode(code));\n  }, []);\n\n  if (user) return <Redirect to=\"/channels/@me\" />;\n  if (code) return <LoadingPage />;\n\n  return <Redirect to=\"/\" />;\n}\n \nexport default VerifyPage;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/home-page';\nimport GuildPage from './pages/guild-page';\nimport LoginPage from './pages/auth/login-page';\nimport RegisterPage from './pages/auth/register-page';\nimport OverviewPage from './pages/overview-page';\nimport LogoutPage from './pages/auth/logout-page';\nimport PrivateRoute from './routing/private-route';\nimport NotFoundPage from './pages/not-found-page';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport fetchEntities from '../store/actions/fetch-entities';\nimport { ready } from '../store/auth';\nimport { initPings } from '../store/pings';\nimport VerifyPage from './pages/auth/verify-page';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(ready());\n    dispatch(initPings());\n  }, []);\n  \n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/register\" component={RegisterPage} />\n        <Route exact path=\"/logout\" component={LogoutPage} />\n        <Route exact path=\"/verify\" component={VerifyPage} />\n\n        <PrivateRoute exact path=\"/channels/@me\" component={OverviewPage} />\n        <PrivateRoute exact path=\"/channels/:guildId/:channelId?\" component={GuildPage} />\n\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\nimport { actions, APIArgs } from '../api';\nimport { openDialog } from '../ui';\n\nexport default (store) => (next) => async (action) => {\n  if (action.type !== actions.restCallBegan.type)\n    return next(action);\n\n  const { url, method, data, onSuccess, headers, callback } = action.payload as APIArgs;\n\n  next(action);\n\n  try {\n    const { data: payload } = await axios.request({\n      baseURL: process.env.REACT_APP_API_URL,\n      data,\n      method,\n      url,\n      headers,\n    });\n\n    store.dispatch(actions.restCallSucceded(payload));\n    if (onSuccess)\n      for (const type of onSuccess)\n        store.dispatch({ type, payload });\n\n    // called after dispatch events\n    callback && await callback(payload);\n  } catch (error) {\n    const response = (error as any).response;\n    store.dispatch(actions.restCallFailed({ url, response }));\n    store.dispatch(openDialog({\n      content: response?.data?.message ?? 'Unknown Error',\n      variant: 'error',\n    }));\n  }\n};","import { actions } from '../api';\nimport ws from '../../services/ws-service';\n\nexport default (store) => (next) => async (action) => {\n  if (action.type !== actions.wsCallBegan.type)\n    return next(action);\n  \n  const { data, event } = action.payload;\n\n  next(action);\n\n  const unsub = () => {\n    ws.off(event, wrapperCallback);\n    ws.off('error', errorCallback);\n  };\n\n  const wrapperCallback = (payload) => {\n    unsub();\n    store.dispatch(actions.wsCallSucceded({\n      event,\n      payload,\n    }));\n  };\n  const errorCallback = (payload) => {\n    unsub();\n    store.dispatch(actions.wsCallFailed({\n      event,\n      payload,\n    }));\n  }\n\n  ws.on(event, wrapperCallback);\n  ws.on('error', errorCallback);\n\n  ws.emit(event, data);\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configure-store';\nimport { SnackbarProvider } from 'notistack';\n\nimport './index.css';\n\nReactDOM.render(\n  <SnackbarProvider maxSnack={1}>\n    <Provider store={configureStore()}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </SnackbarProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport guilds from './guilds';\nimport messages from './messages';\nimport api from './middleware/rest';\nimport ws from './middleware/ws';\nimport users from './users';\nimport channels from './channels';\nimport auth from './auth';\nimport config from './config';\nimport ui from './ui';\nimport meta from './meta';\nimport members from './members';\nimport invites from './invites';\nimport roles from './roles';\nimport typing from './typing';\nimport pings from './pings';\n\nexport default () => configureStore<Store.AppState>({\n  middleware: [\n    ...getDefaultMiddleware({ serializableCheck: false }),\n    ws,\n    api,\n  ] as any,\n  reducer: combineReducers({\n    auth,\n    config,\n    entities: combineReducers({\n      channels,\n      invites,\n      guilds,\n      members,\n      messages,\n      pings,\n      typing,\n      roles,\n      users,\n    }),\n    meta,\n    ui,\n  }),\n});\n","import { EventEmitter } from 'events';\n\nconst events = new EventEmitter();\nglobal['events'] = events;\n\nexport default events;"],"sourceRoot":""}